<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_5NxvAMn8EeOEaMUy0wTQ0A" name="Countdown">
    <eAnnotations xmi:id="_5QUssMn8EeOEaMUy0wTQ0A" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_5QUsscn8EeOEaMUy0wTQ0A" source="codegen">
        <details xmi:id="_5QUsssn8EeOEaMUy0wTQ0A" key="codegenDirectory" value="/Countdown/src"/>
        <details xmi:id="_5n100Mn8EeOEaMUy0wTQ0A" key="AssociatedSourceCode" value="/Countdown/src/Game/Buzzer.java;3434970487/1;/Countdown/src/Game/ConundrumRound.java;2263263183/1;/Countdown/src/Game/Countdown.java;2985231145/1;/Countdown/src/Game/Dictionary.java;3425936829/1;/Countdown/src/Game/GameObjects.java;889017511/1;/Countdown/src/Game/GenerateSolution.java;2881291996/1;/Countdown/src/Game/Launcher.java;3321840599/1;/Countdown/src/Game/TheTimer.java;325300325/1;/Countdown/src/Game/Monitor.java;3723719952/1;/Countdown/src/Game/Round.java;3725741029/1;/Countdown/src/Game/Player.java;353670169/1;/Countdown/src/Game/NumberRound.java;1095010581/1;/Countdown/src/Game/LeaderBoard.java;2541182593/1;/Countdown/src/Game/UserIO.java;2038661890/1;/Countdown/src/Game/WordRound.java;173398641/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_5bn9wMn8EeOEaMUy0wTQ0A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_5bok0Mn8EeOEaMUy0wTQ0A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_5bok0cn8EeOEaMUy0wTQ0A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_5bok0sn8EeOEaMUy0wTQ0A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_5bok08n8EeOEaMUy0wTQ0A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_5bok1Mn8EeOEaMUy0wTQ0A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_5bok1cn8EeOEaMUy0wTQ0A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_5bpL4Mn8EeOEaMUy0wTQ0A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_5bpL4cn8EeOEaMUy0wTQ0A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_5brBEMn8EeOEaMUy0wTQ0A" name="Game">
      <packagedElement xmi:type="uml:Class" xmi:id="_5cfgcMn8EeOEaMUy0wTQ0A" clientDependency="_5gG1Icn8EeOEaMUy0wTQ0A" name="Buzzer">
        <ownedAttribute xmi:id="_5gblQMn8EeOEaMUy0wTQ0A" name="m" visibility="package" type="_5dEvQMn8EeOEaMUy0wTQ0A" association="_5hOPcMn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gcMUcn8EeOEaMUy0wTQ0A" name="twoPlayer" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5gczYcn8EeOEaMUy0wTQ0A" name="io" visibility="package" type="_5dfmAMn8EeOEaMUy0wTQ0A" association="_5hO2gcn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gdacMn8EeOEaMUy0wTQ0A" name="keyPress" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_5gG1Icn8EeOEaMUy0wTQ0A" client="_5cfgcMn8EeOEaMUy0wTQ0A" supplier="_5gGOEcn8EeOEaMUy0wTQ0A" contract="_5gGOEcn8EeOEaMUy0wTQ0A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g3DEMn8EeOEaMUy0wTQ0A" name="Buzzer" specification="_5fZqgMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g3DEcn8EeOEaMUy0wTQ0A" name="twoPlayer">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g3DEsn8EeOEaMUy0wTQ0A" name="io" type="_5dfmAMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g3DE8n8EeOEaMUy0wTQ0A" type="_5cfgcMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>m = new Monitor();
		this.twoPlayer = twoPlayer;
		this.io = io;

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g3DFMn8EeOEaMUy0wTQ0A" name="run" specification="_5cgHgMn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>System.out.println(&quot;Player 1, press 1 to buzz with answer&quot;);
		if(twoPlayer)
			System.out.println(&quot;Player 2, press 2 to buzz with answer&quot;);
		System.out.println(&quot;Press 0 to give up!&quot;);

		keyPress = -1;

		while (keyPress == -1) {

			keyPress = io.getNumber();

			if(keyPress == 1) {
				System.out.println(&quot;Player 1 Buzzed First!&quot;);
				this.doNotify();
			} else if(keyPress == 2 &amp;&amp; twoPlayer) {
				System.out.println(&quot;Player 2 Buzzed First!&quot;);
				this.doNotify();
			} else if(keyPress == 0){
				System.out.println(&quot;You have given up!&quot;);
				this.doNotify();
			} else {
				keyPress = -1;
			}
		}	

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g3DFcn8EeOEaMUy0wTQ0A" name="getKeyPress" specification="_5cgukMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g3DFsn8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return keyPress;

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g3qIMn8EeOEaMUy0wTQ0A" name="doWait" specification="_5cguksn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>synchronized(m){
			try{
				m.wait(32000,0);
			} catch(InterruptedException e){}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g3qIcn8EeOEaMUy0wTQ0A" name="doNotify" specification="_5cguk8n8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>synchronized(m){
			m.notifyAll();
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5cgHgMn8EeOEaMUy0wTQ0A" name="run" method="_5g3DFMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hDQUcn8EeOEaMUy0wTQ0A">
            <body>Method from Runnable interface which is called from executor</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5cgukMn8EeOEaMUy0wTQ0A" name="getKeyPress" method="_5g3DFcn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hDQUsn8EeOEaMUy0wTQ0A">
            <body>@return an int to show who buzzed first</body>
          </ownedComment>
          <ownedParameter xmi:id="_5cgukcn8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5cguksn8EeOEaMUy0wTQ0A" name="doWait" method="_5g3qIMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hDQU8n8EeOEaMUy0wTQ0A">
            <body>Allows an object to wait on the execution of this class completing</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5cguk8n8EeOEaMUy0wTQ0A" name="doNotify" method="_5g3qIcn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hDQVMn8EeOEaMUy0wTQ0A">
            <body>Notify waiting object that executon is complete</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5fZqgMn8EeOEaMUy0wTQ0A" name="Buzzer" method="_5g3DEMn8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5fZqg8n8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5fZqhMn8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5hDQUMn8EeOEaMUy0wTQ0A">
            <body>Constructor for Buzzer class
	 * 
	 * @param boolean to tell if the game is single or multi player
	 * @param UserIO</body>
          </ownedComment>
          <ownedParameter xmi:id="_5fZqgcn8EeOEaMUy0wTQ0A" name="twoPlayer">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5fZqgsn8EeOEaMUy0wTQ0A" name="io" type="_5dfmAMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5fZqhcn8EeOEaMUy0wTQ0A" type="_5cfgcMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_5ch8sMn8EeOEaMUy0wTQ0A" name="ConundrumRound">
        <ownedComment xmi:id="_5hDQVcn8EeOEaMUy0wTQ0A">
          <body>The conundrum round for the countdown game</body>
        </ownedComment>
        <generalization xmi:id="_5fdU48n8EeOEaMUy0wTQ0A" general="_5dFWUMn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gdacsn8EeOEaMUy0wTQ0A" name="ans1" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5geBgMn8EeOEaMUy0wTQ0A" name="ans2" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g3qIsn8EeOEaMUy0wTQ0A" name="ConundrumRound" specification="_5fa4ocn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g3qI8n8EeOEaMUy0wTQ0A" name="dict" type="_5cwmMMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g3qJMn8EeOEaMUy0wTQ0A" name="pOne" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g3qJcn8EeOEaMUy0wTQ0A" name="pTwo" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g3qJsn8EeOEaMUy0wTQ0A" name="board" type="_5dTYwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g3qJ8n8EeOEaMUy0wTQ0A" name="timerActive">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g3qKMn8EeOEaMUy0wTQ0A" type="_5ch8sMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>super(dict, pOne, pTwo, board, LeaderBoard.CONUNDRUMROUND, timerActive);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g3qKcn8EeOEaMUy0wTQ0A" name="ConundrumRound" specification="_5fbftsn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g3qKsn8EeOEaMUy0wTQ0A" name="dict" type="_5cwmMMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g3qK8n8EeOEaMUy0wTQ0A" name="pOne" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g3qLMn8EeOEaMUy0wTQ0A" name="pTwo" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g3qLcn8EeOEaMUy0wTQ0A" name="board" type="_5dTYwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g3qLsn8EeOEaMUy0wTQ0A" type="_5ch8sMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>super(dict, pOne, pTwo, board, LeaderBoard.CONUNDRUMROUND, true);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g3qL8n8EeOEaMUy0wTQ0A" name="ConundrumRound" specification="_5fcGx8n8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g3qMMn8EeOEaMUy0wTQ0A" name="o" type="_5c2s0Mn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g3qMcn8EeOEaMUy0wTQ0A" name="timerActive">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g3qMsn8EeOEaMUy0wTQ0A" type="_5ch8sMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>this(o.dict, o.pOne, o.pTwo, o.leaders, timerActive);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g4RMMn8EeOEaMUy0wTQ0A" name="ConundrumRound" specification="_5fct08n8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g4RMcn8EeOEaMUy0wTQ0A" name="o" type="_5c2s0Mn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g4RMsn8EeOEaMUy0wTQ0A" type="_5ch8sMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>this(o.dict, o.pOne, o.pTwo, o.leaders, true);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g4RM8n8EeOEaMUy0wTQ0A" name="play" specification="_5ckY8Mn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>printWelcome(&quot;conundrum&quot;);
		
		String anagram = dict.getAnagram();
		ArrayList&lt;String> answer = dict.getBestWords(anagram);
		
		//currently printing the answer for testing purposes
		System.out.println(&quot;The conundrum is: &quot; + anagram + &quot;\n&quot;);
		
		if(timerActive) {
			CountdownTimer();
		} else {
			Buzzer buzzer = new Buzzer(twoPlayer, io);
			buzzer.run();
			keyPress = buzzer.getKeyPress();
		}			
		
		if(keyPress == 1) {
			getAnswer(pOne);
			if(!checkAnswer(pOne, answer) &amp;&amp; twoPlayer) {
				getAnswer(pTwo);
				checkAnswer(pTwo, answer);
			}
		} else if(keyPress == 2) {
			getAnswer(pTwo);
			if(!checkAnswer(pTwo, answer)) {
				getAnswer(pOne);
				checkAnswer(pOne, answer);
			}
		} else {
			System.out.println(&quot;There was no buzz in time therefore no points are awarded :(&quot;);
		}
		
		System.out.println(&quot;\nThe correct answer(s) was / were: &quot;);
		for(String i : answer)
			System.out.println(&quot;\t&quot; + i);
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g4RNMn8EeOEaMUy0wTQ0A" name="awardPoints" specification="_5fct2Mn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g4RNcn8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <language>java</language>
          <body>System.out.println(&quot;Player &quot; + p.getNumber() + &quot; is correct!!!&quot;);
		
		if (p.getNumber() == 1) {
			if (timerActive)
				board.addScore(p.getName(), roundType, 10);
			pOne.updateScore(10);
		} else {
			if (timerActive)
				board.addScore(p.getName(), roundType, 10);
			pTwo.updateScore(10);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g4RNsn8EeOEaMUy0wTQ0A" name="checkAnswer" specification="_5gHcMMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g4RN8n8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g4ROMn8EeOEaMUy0wTQ0A" name="ans" type="_5faRkMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g4ROcn8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if(p.getNumber() == 1) {
			
			if(ans.contains(ans1)) {
				awardPoints(pOne);
				return true;
			}
			
		} else {
			
			if(ans.contains(ans2)) {
				awardPoints(pTwo);
				return true;
			}
		}
		
		System.out.println(p.getName() + &quot; is wrong!!!&quot;);
		return false;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g4ROsn8EeOEaMUy0wTQ0A" name="getAnswer" specification="_5fdU4cn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g4RO8n8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <language>java</language>
          <body>System.out.println(p.getName() + &quot; enter your answer: &quot;);

		if (p.getNumber() == 1) {
			ans1 = io.getString();
			System.out.println(&quot;Your answer is: &quot; + ans1);
		} else {
			ans2 = io.getString();
			System.out.println(&quot;Your answer is: &quot; + ans2);
		}

		System.out.println();
		
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5ckY8Mn8EeOEaMUy0wTQ0A" name="play" method="_5g4RM8n8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hD3Ycn8EeOEaMUy0wTQ0A">
            <body>Play the conundrum round</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5fa4ocn8EeOEaMUy0wTQ0A" name="ConundrumRound" method="_5g3qIsn8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5fbfs8n8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5fbftMn8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5hDQVsn8EeOEaMUy0wTQ0A">
            <body>A constructor for the conundrum round
	 * 
	 * @param dict the dictionary file
	 * @param pOne Player one
	 * @param pTwo Player two
	 * @param board the leaderboard
	 * @param timerActive if the timer is active</body>
          </ownedComment>
          <ownedParameter xmi:id="_5fa4osn8EeOEaMUy0wTQ0A" name="dict" type="_5cwmMMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5fa4o8n8EeOEaMUy0wTQ0A" name="pOne" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5fbfsMn8EeOEaMUy0wTQ0A" name="pTwo" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5fbfscn8EeOEaMUy0wTQ0A" name="board" type="_5dTYwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5fbfssn8EeOEaMUy0wTQ0A" name="timerActive">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5fbftcn8EeOEaMUy0wTQ0A" type="_5ch8sMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5fbftsn8EeOEaMUy0wTQ0A" name="ConundrumRound" method="_5g3qKcn8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5fcGxMn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5fcGxcn8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5hDQV8n8EeOEaMUy0wTQ0A">
            <body>A constructor for the conundrum round
	 * 
	 * @param dict the dictionary file
	 * @param pOne Player one
	 * @param pTwo Player two
	 * @param board the leaderboard</body>
          </ownedComment>
          <ownedParameter xmi:id="_5fcGwMn8EeOEaMUy0wTQ0A" name="dict" type="_5cwmMMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5fcGwcn8EeOEaMUy0wTQ0A" name="pOne" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5fcGwsn8EeOEaMUy0wTQ0A" name="pTwo" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5fcGw8n8EeOEaMUy0wTQ0A" name="board" type="_5dTYwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5fcGxsn8EeOEaMUy0wTQ0A" type="_5ch8sMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5fcGx8n8EeOEaMUy0wTQ0A" name="ConundrumRound" method="_5g3qL8n8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5fct0Mn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5fct0cn8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5hDQWMn8EeOEaMUy0wTQ0A">
            <body>A constructor for the number round
	 * @param o A gameObjects object.
	 * @param timerActive if the timer is active</body>
          </ownedComment>
          <ownedParameter xmi:id="_5fcGyMn8EeOEaMUy0wTQ0A" name="o" type="_5c2s0Mn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5fcGycn8EeOEaMUy0wTQ0A" name="timerActive">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5fct0sn8EeOEaMUy0wTQ0A" type="_5ch8sMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5fct08n8EeOEaMUy0wTQ0A" name="ConundrumRound" method="_5g4RMMn8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5fct1cn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5fct1sn8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5hD3YMn8EeOEaMUy0wTQ0A">
            <body>A constructor for the number round
	 * @param o A gameObjects object.</body>
          </ownedComment>
          <ownedParameter xmi:id="_5fct1Mn8EeOEaMUy0wTQ0A" name="o" type="_5c2s0Mn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5fct18n8EeOEaMUy0wTQ0A" type="_5ch8sMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5fct2Mn8EeOEaMUy0wTQ0A" name="awardPoints" visibility="private" method="_5g4RNMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hD3Ysn8EeOEaMUy0wTQ0A">
            <body>Awards points to a Player
	 * @param the Player to be awarded points</body>
          </ownedComment>
          <ownedParameter xmi:id="_5fdU4Mn8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5fdU4cn8EeOEaMUy0wTQ0A" name="getAnswer" visibility="private" method="_5g4ROsn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hD3ZMn8EeOEaMUy0wTQ0A">
            <body>Get the players answer
	 * 
	 * @param the Player who's answer is to be collected</body>
          </ownedComment>
          <ownedParameter xmi:id="_5fdU4sn8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5gHcMMn8EeOEaMUy0wTQ0A" name="checkAnswer" visibility="private" method="_5g4RNsn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hD3Y8n8EeOEaMUy0wTQ0A">
            <body>
	 * Checks if a players answer is correct
	 * 
	 * @param the Player who's answer is to be checked
	 * @param an ArrayList of all possible answers
	 * @return returns true if answer is correct</body>
          </ownedComment>
          <ownedParameter xmi:id="_5gHcMcn8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5gHcMsn8EeOEaMUy0wTQ0A" name="ans" type="_5faRkMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5gHcM8n8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_5coDUMn8EeOEaMUy0wTQ0A" name="Countdown">
        <ownedComment xmi:id="_5hD3Zcn8EeOEaMUy0wTQ0A">
          <body>This class executes a full game of countdown
or a custom game of countdown</body>
        </ownedComment>
        <ownedAttribute xmi:id="_5geBgsn8EeOEaMUy0wTQ0A" name="playerOne" visibility="private" type="_5dJnwMn8EeOEaMUy0wTQ0A" association="_5hO2hMn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5geokcn8EeOEaMUy0wTQ0A" name="playerTwo" visibility="private" type="_5dJnwMn8EeOEaMUy0wTQ0A" association="_5hPdkcn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5geok8n8EeOEaMUy0wTQ0A" name="currentRound" visibility="private" type="_5dFWUMn8EeOEaMUy0wTQ0A" association="_5hQEocn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gfPoMn8EeOEaMUy0wTQ0A" name="objects" visibility="private" type="_5c2s0Mn8EeOEaMUy0wTQ0A" association="_5hQEpMn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gfPosn8EeOEaMUy0wTQ0A" name="gameOrder" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5gfPo8n8EeOEaMUy0wTQ0A" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5gf2sMn8EeOEaMUy0wTQ0A" name="gameOrderString" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5gf2ssn8EeOEaMUy0wTQ0A" name="io" visibility="private" type="_5dfmAMn8EeOEaMUy0wTQ0A" association="_5hQrscn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gf2tMn8EeOEaMUy0wTQ0A" name="customGame" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5ggdwcn8EeOEaMUy0wTQ0A" name="timerActive" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5ggdwsn8EeOEaMUy0wTQ0A" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5ggdxMn8EeOEaMUy0wTQ0A" name="WORD" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5ghE0Mn8EeOEaMUy0wTQ0A" value="'W'"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5ghE0sn8EeOEaMUy0wTQ0A" name="NUMBER" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5ghE08n8EeOEaMUy0wTQ0A" value="'N'"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5ghr4Mn8EeOEaMUy0wTQ0A" name="CONUNDRUM" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5ghr4cn8EeOEaMUy0wTQ0A" value="'C'"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5ghr48n8EeOEaMUy0wTQ0A" name="timestamp" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g4RPMn8EeOEaMUy0wTQ0A" name="Countdown" specification="_5fkCkMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g4RPcn8EeOEaMUy0wTQ0A" name="go" type="_5c2s0Mn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g4RPsn8EeOEaMUy0wTQ0A" type="_5coDUMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>this.objects = go;
		playerOne = go.pOne;
		playerTwo = go.pTwo;
		
		io = new UserIO();
		
		timestamp = System.nanoTime();
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g44QMn8EeOEaMUy0wTQ0A" name="Countdown" specification="_5fkClcn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g44Qcn8EeOEaMUy0wTQ0A" name="go" type="_5c2s0Mn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g44Qsn8EeOEaMUy0wTQ0A" name="timerActive">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g44Q8n8EeOEaMUy0wTQ0A" type="_5coDUMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>this.objects = go;
		playerOne = go.pOne;
		playerTwo = go.pTwo;
		this.timerActive = timerActive;
		
		io = new UserIO();
		
		timestamp = System.nanoTime();
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g44RMn8EeOEaMUy0wTQ0A" name="play" specification="_5cp4gMn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>gameOrderString = &quot;WWNWWWWNNWWWWNC&quot;;
		gameOrder = gameOrderString.toCharArray();
		
		customGame = false;
		
		play(0);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g44Rcn8EeOEaMUy0wTQ0A" name="playCustomGame" specification="_5cp4gcn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>io.printLines(2);
		customGame = true;
		
		System.out.println(&quot;So a custom game, is it?&quot;);
		
		boolean unvalid;
		
		do {
			
			unvalid = false;
			
			System.out.println(&quot;\nPlease enter a string of type awesome :&quot;);
			System.out.println(&quot;I may have lied sorry. Please enter a string of rounds you would like to play&quot;);
			System.out.println(&quot;W for word, N for number, C for conundrum. For example: WWNNWC&quot;);
			
			gameOrderString = io.getString().toUpperCase();
			gameOrder = gameOrderString.toCharArray();
			
			for ( int i = 0; i &lt; gameOrder.length; i++){
				
				char c = gameOrder[i];
				
				if ( !(c == WORD || c == NUMBER || c == CONUNDRUM) ){
					
					System.out.println(&quot;Error!!!!!! try again!!!\n&quot;);
					unvalid = true;
					break;
				}
			}
					
		}while(unvalid);
		
		play(0);
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g44Rsn8EeOEaMUy0wTQ0A" name="play" specification="_5cp4gsn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g44R8n8EeOEaMUy0wTQ0A" name="start">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>//Say hi :)
		printWelcome();
		
		//Loop for the number of rounds i.e 15
		int roundNo = start;
		while ( roundNo &lt; gameOrder.length){
			
			//IF user wishes to continue or quit the game
			if ( roundNo != 0){
				
				System.out.println(&quot;Ready to continue> (Yes/No) :&quot;);
				boolean resume = io.getYesNo(); // should be continue not resume. But continue is a keyword and using it would be bad
				if (!resume){
					System.out.println(&quot;We hope to see you agian soon!&quot;);
					return;
				}
			}
			
			// if word round
			if ( gameOrder[roundNo] == WORD ){
				
				//Let the player know what is going on
				io.printLines(1);
				if (roundNo != 0)
					System.out.println(&quot;Next up we have a word round\n&quot;);
				else if (roundNo == gameOrder.length)
					System.out.println(&quot;Sadly we are nearing the end\nwith just a word round left to play\n&quot;);
				else
					System.out.println(&quot;The first round, as always, is a word round\n&quot;);
				
				currentRound = new WordRound(objects, timerActive);
				currentRound.play();
			}
			
			// If its a numbers round
			if ( gameOrder[roundNo] == NUMBER ){
				
				//Let the player know what is going on
				io.printLines(1);
				if (roundNo != 0)
					System.out.println(&quot;Next up we have a number roundn&quot;);
				else if (roundNo == gameOrder.length)
					System.out.println(&quot;Sadly we are nearing the end\nwith just a number round left to play\n&quot;);
				else
					System.out.println(&quot;The first round, is a number round\n&quot;);
				
				currentRound = new  NumberRound(objects, timerActive);
				currentRound.play();
			}
			
			//If its a conundrum round
			if (gameOrder[roundNo] == CONUNDRUM){
				
				//Let the player know what is going on
				io.printLines(1);
				if (roundNo != 0)
					System.out.println(&quot;Next up we have a conundrum round\n&quot;);
				else if (roundNo == gameOrder.length)
					System.out.println(&quot;Sadly we are nearing the end.\nWhich of course means we are going to play\n&quot; +
				&quot; a coundrumround\n&quot;);
				else
					System.out.println(&quot;The first round, is a conundrum round\n&quot;);
				
				currentRound = new ConundrumRound(objects, timerActive);
				currentRound.play();
			}
			
			/*
			 * Autosave the game :)
			 * 
			 * Incremented roundNo is passed as it should save the roundNo of the next round not the one
			 * that has just been played.
			 */
			save(++roundNo);
		}// Close game loop
		
		printClose();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g44SMn8EeOEaMUy0wTQ0A" name="printWelcome" specification="_5cqfkcn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>System.out.println(&quot;----------------------------------------------------&quot;);
		System.out.println(&quot;----------------------------------------------------&quot;);
		System.out.println(&quot;Hello and welcome to countdown&quot;);
		System.out.println(&quot;---------------------------\n&quot;);
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g44Scn8EeOEaMUy0wTQ0A" name="printClose" specification="_5cqfksn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>System.out.println(&quot;Well that is the game over.&quot;);
		
		if (playerTwo == null){
			printWinner(playerOne, null);
		}else{
		
			if (playerOne.getScore() >= playerTwo.getScore())
				printWinner(playerOne, playerTwo);
			else
				printWinner(playerTwo, playerOne);
		}
		
		System.out.println(&quot;We hope to see you again soon for another game.&quot;);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g44Ssn8EeOEaMUy0wTQ0A" name="printWinner" specification="_5fkppcn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g44S8n8EeOEaMUy0wTQ0A" name="winner" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g44TMn8EeOEaMUy0wTQ0A" name="loser" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <language>java</language>
          <body>System.out.println(&quot;Its seems that &quot; + winner.getName() + &quot; has won.&quot;);
		
		if (loser != null){
		
			int pointdiff = winner.getScore() - loser.getScore();
			
			if ( pointdiff &lt; 10){
				System.out.println(&quot;It was close though with only a &quot; + pointdiff + &quot; lead.&quot;);
				System.out.println(&quot;So it was a very exciting game.&quot;);
			} else if (pointdiff > 100){
				System.out.println(&quot;It seems that &quot; + winner.getName() + &quot; kicked &quot; + loser.getName() + &quot; ass, with a &quot; + pointdiff + 
						&quot; differnce.&quot;);
			} else if (pointdiff == 0){
				System.out.println(&quot;A draw! Well done both players.&quot;);
			} else {
				System.out.println(winner.getName() + &quot;won with a &quot; + pointdiff + &quot;lead over &quot; + loser.getName() + &quot;.\n&quot; +
			&quot;A good game all round&quot;);
				
			}
		}
		
		//Add players to the leaderboards
		
		String gametypeString;
		
		if (!customGame)
			gametypeString = LeaderBoard.FULLGAME;
		else
			gametypeString = LeaderBoard.CUSTOMGAME;
				
		if (timerActive)
			objects.leaders.addScore(playerOne.getName(), gametypeString, playerOne.getScore());
		
		if (loser != null){
			if (timerActive)
				objects.leaders.addScore(playerTwo.getName(), gametypeString, playerTwo.getScore());
			System.out.println(&quot;commiserations &quot; + loser.getName() + &quot; and of course well done &quot; + winner.getName() + &quot;.&quot;);
		}
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g5fUMn8EeOEaMUy0wTQ0A" name="load" specification="_5crGoMn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>io.printLines(1);
		
		
		try{
			
			File xmlFile = new File(&quot;saves.xml&quot;);
			DocumentBuilderFactory docFac = DocumentBuilderFactory.newInstance();
			DocumentBuilder docBuilder = docFac.newDocumentBuilder();
			Document doc = docBuilder.parse(xmlFile);
			
			//Quick sanity formating. Should be fine unless someone has been playing with the file . . .
			doc.getDocumentElement().normalize();
			
			//Get all the saves
			NodeList saves = doc.getElementsByTagName(&quot;save&quot;);
			
			//get the save the user wants
			long timestamp = loadSelector(saves);
			
			Element save = null;
			for (int i = 0; i &lt; saves.getLength(); i++){
				
				Element saveTemp = (Element) saves.item(i);
				
				if (saveTemp.getAttribute(&quot;id&quot;).equals(&quot;&quot; + timestamp)){
					
					save = (Element) saves.item(i);
					break;
				}
			} //close save hunter
			
			if(save == null){
				throw new Exception(&quot;error finding save&quot;);
			}
			
			/*
			 * Now the save to be loaded has been selected load it
			 * and update the game state.
			 */
			
			//update timestamp
				this.timestamp = timestamp;
			
			//Update the players scores with the saved values
				NodeList players = save.getElementsByTagName(&quot;player&quot;);
				
				Element pOne = (Element) players.item(0);
				NodeList pointsData = pOne.getElementsByTagName(&quot;score&quot;);
				int points = Integer.parseInt( pointsData.item(0).getTextContent() );
				playerOne.updateScore(points);
				
				if (playerTwo != null){
					
					Element pTwo = (Element) players.item(1);
					pointsData = pTwo.getElementsByTagName(&quot;score&quot;);
					points = Integer.parseInt( pointsData.item(0).getTextContent() );
					playerOne.updateScore(points);
				}
			
			//load gamedata
				NodeList gameList = save.getElementsByTagName(&quot;game&quot;);
				Element game = (Element) gameList.item(0);
				
				NodeList roundstringData = game.getElementsByTagName(&quot;roundString&quot;);
				gameOrderString = roundstringData.item(0).getTextContent();
				gameOrder = gameOrderString.toCharArray();
				
				NodeList roundNoData = game.getElementsByTagName(&quot;roundNo&quot;);
				int roundNo = Integer.parseInt( roundNoData.item(0).getTextContent() );
				
				NodeList customGameData = game.getElementsByTagName(&quot;customGame&quot;);
				String custom = customGameData.item(0).getTextContent();
				if (custom.equals(&quot;TRUE&quot;))
					customGame = true;
				else if (custom.equals(&quot;FALSE&quot;))
					customGame = false;
				else
					throw new Exception(&quot;Error parsing customGame&quot;);
			
			//free everything for garbage collection
				gameList = null;
				game = null;
				
				pOne = null;
				pointsData = null;				
				
				roundstringData = null;
				roundNoData = null;
				customGameData = null;
				custom = null;
			
			//And finally play the game
				play(roundNo);
			
			
		} catch (FileNotFoundException e){
			
			System.out.println(&quot;No saves exist&quot;);
		} catch (Exception e){
			System.err.println(&quot;The savefile has become corrupted. I hope you had backups&quot;);
			e.printStackTrace();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g5fUcn8EeOEaMUy0wTQ0A" name="loadSelector" specification="_5gJRYMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g5fUsn8EeOEaMUy0wTQ0A" name="saves" type="_5fi0c8n8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g5fU8n8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
          <language>java</language>
          <body>HashMap&lt;Integer, Long> saveMap = new HashMap&lt;>();
		
		System.out.println(&quot;Please choose a save to load: &quot;);
		System.out.println(&quot;\n Number\t:\tType\t\t:\troundNo&quot;);
		
		for (int i = 0; i &lt; saves.getLength(); i++){
			
			Node save = saves.item(i);
			
			NodeList saveData = save.getChildNodes();
			
			//if a two player game length of save is 7
			//if one player game length of save is 5
			
			//if two player
			if (playerTwo != null){
				
				if (saveData.getLength() == 7){
					
					//if two player game and its a two player save then cont
					Element pOneData = (Element) saveData.item(1);
					Element pTwoData = (Element) saveData.item(3);
					
					String pOneName = pOneData.getElementsByTagName(&quot;name&quot;).item(0).getTextContent();
					String pTwoName = pTwoData.getElementsByTagName(&quot;name&quot;).item(0).getTextContent();
					
					//If the names of the current session match the names in the save
					if ( playerOne.getName().equals(pOneName) || playerTwo.getName().equals(pTwoName)){
						
						loadSelectorPrinter(save, saveMap, i);
					}
				}
				
			}
			
			//if one player
			if (playerTwo == null){
				
				if (saveData.getLength() == 5){
					
					//if two player game and its a two player save then cont
					Element pOneData = (Element) saveData.item(1);
					
					String pOneName = pOneData.getElementsByTagName(&quot;name&quot;).item(0).getTextContent();
					
					//If the names of the current session match the names in the save
					if ( playerOne.getName().equals(pOneName)){
						
						loadSelectorPrinter(save, saveMap, i);
					}
				}
				
			}
			
			
		}

		System.out.println(&quot;note: other games can not be loaded by the current players&quot;);
		
		int selection;
		do {
			System.out.println(&quot;Select one of the options:&quot;);
			selection = io.getNumber();
		}while ( selection &lt; 0 || selection >= saves.getLength());
		
		//return the timestamp of the selected save;
		return saveMap.get(selection);
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g5fVMn8EeOEaMUy0wTQ0A" name="loadSelectorPrinter" specification="_5gJ4cMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g5fVcn8EeOEaMUy0wTQ0A" name="save" type="_5fi0ccn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g5fVsn8EeOEaMUy0wTQ0A" name="saveMap" type="_5fejA8n8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g5fV8n8EeOEaMUy0wTQ0A" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>Element saveElement = (Element) save;
		
		Long timestamp = Long.valueOf(saveElement.getAttribute(&quot;id&quot;)).longValue();
		saveMap.put(i, timestamp);
		
		NodeList game = saveElement.getElementsByTagName(&quot;game&quot;);
		NodeList gameData = game.item(0).getChildNodes();
		
		String custom = gameData.item(5).getTextContent();
		String roundNo = gameData.item(3).getTextContent();
		
		String roundtype = &quot;Full game&quot;;
		if (custom.equals(&quot;TRUE&quot;)){
			roundtype = &quot;Custom game&quot;;
		}
		
		System.out.println(i + &quot;\t:\t&quot; + roundtype + &quot;\t:\t &quot; + roundNo);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g5fWMn8EeOEaMUy0wTQ0A" name="save" specification="_5crGocn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g5fWcn8EeOEaMUy0wTQ0A" name="roundNoValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>Element save = null;
		
		String filepath = &quot;saves.xml&quot;;
		File f = new File(filepath);
		
		if ( !f.exists())
			createSaveFile();
		
		
		try {
			
			//create tools
			DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();
			DocumentBuilder docBuilder = docFactory.newDocumentBuilder();
			Document doc = docBuilder.parse(filepath);
			
			Node root = doc.getFirstChild();
			
			NodeList saves = root.getChildNodes();
			
			//Check if save of this game already exists
			boolean found = false;
			for (int i = 0; i &lt; saves.getLength(); i++){
				
				Node temp = saves.item(i);
				
				if ( temp instanceof Element){
					save = (Element) temp;
					
					if (save.getAttribute(&quot;id&quot;).equals(&quot;&quot; + timestamp)){
						found = true;
						break;
					}
				}
			}//close save finder
			
			if (found){	//If save exits, update existing save
				
				/* If the game is completed then delete it
				 */
				if (roundNoValue == gameOrder.length){
					System.out.println(&quot;GAME DONE DELETING&quot;);
					Node saveNode = (Node) save;
					root.removeChild(saveNode);
					
				} else { // else update the game		
				
					NodeList saveDataNodes = save.getChildNodes();
					
					//Update player info
					
					/*
					 * If player two exists then the gamedata will be in position 4 of the list
					 * otherwise it will be in position 5. So while updating the player
					 * we shall calc the position while updating player
					 * 
					 * The weird positioning is due to the DOM model seeing text between the nodes
					 */
					int pos = 3;
					
					playerUpdater(saveDataNodes, playerOne);
					
					if (playerTwo != null){
						playerUpdater(saveDataNodes, playerTwo);
						pos = 5;
					}
					
					
					//Next update the game data
					Node gameData = saveDataNodes.item(pos);
	
					NodeList gameDataNodes = gameData.getChildNodes();
					
					//Loop through them until value to be updated is found
					for (int j = 0; j &lt; gameDataNodes.getLength(); j++){
						
						Node current = gameDataNodes.item(j);
						
						if (current.getNodeName().equals(&quot;roundNo&quot;))
							current.setTextContent(&quot;&quot; + roundNoValue);
					}
					
					
				} // Close update/delete if
				
				
			}else{ // If save doesn't exist create a new one
				
				//create save
				save = doc.createElement(&quot;save&quot;);
				save.setAttribute(&quot;id&quot;, &quot;&quot; + timestamp);
				
	
				//save the players
				playerSaver(doc, save, playerOne);
				if (playerTwo != null)
					playerSaver(doc, save, playerTwo);
				
				
				//save the game details
				Element game = doc.createElement(&quot;game&quot;);
				
					Element roundString = doc.createElement(&quot;roundString&quot;);
					roundString.appendChild(doc.createTextNode(gameOrderString));
					game.appendChild(roundString);
				
					Element roundNo = doc.createElement(&quot;roundNo&quot;);
					roundNo.appendChild(doc.createTextNode(&quot;&quot; + roundNoValue));
					game.appendChild(roundNo);
				
					Element customeGameElement = doc.createElement(&quot;customGame&quot;);
					if (customGame)
						customeGameElement.appendChild(doc.createTextNode(&quot;TRUE&quot;));
					else
						customeGameElement.appendChild(doc.createTextNode(&quot;FALSE&quot;));
					game.appendChild(customeGameElement);
				
				save.appendChild(game);	
				
				root.appendChild(save);
			}
			
			// write the content into xml file
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			transformer.setOutputProperty(OutputKeys.INDENT, &quot;yes&quot;);
			transformer.setOutputProperty(&quot;{http://xml.apache.org/xslt}indent-amount&quot;, &quot;2&quot;);
			DOMSource source = new DOMSource(doc);
			
			StreamResult result = new StreamResult(new File(filepath));
			transformer.transform(source, result);
						
		} catch (Exception e){
			System.out.println(&quot;The save file has become corrupted! Delete it! I hope you back things up&quot;);
			e.printStackTrace();
		}
		
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g5fWsn8EeOEaMUy0wTQ0A" name="playerUpdater" specification="_5gKfgcn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g5fW8n8EeOEaMUy0wTQ0A" name="saveDataNodes" type="_5fi0c8n8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g5fXMn8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <language>java</language>
          <body>//Grab the nodes in player
		NodeList playerDataNodes = saveDataNodes.item(p.getNumber() -1).getChildNodes();
		
		//Loop through them until value to be updated is found
		for (int j = 0; j &lt; playerDataNodes.getLength(); j++){
			
			Node current = playerDataNodes.item(j);
			
			if (current.getNodeName().equals(&quot;score&quot;))
				current.setTextContent(&quot;&quot; + p.getScore());
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g5fXcn8EeOEaMUy0wTQ0A" name="playerSaver" specification="_5gLGkMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g5fXsn8EeOEaMUy0wTQ0A" name="doc" type="_5fhmU8n8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g5fX8n8EeOEaMUy0wTQ0A" name="save" type="_5fiNYcn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g5fYMn8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <language>java</language>
          <body>Element player = doc.createElement(&quot;player&quot;);
		
			Element number = doc.createElement(&quot;number&quot;);
			number.appendChild(doc.createTextNode(&quot;&quot; + p.getNumber()));
			player.appendChild(number);
			
			Element name = doc.createElement(&quot;name&quot;);
			name.appendChild(doc.createTextNode(p.getName()));
			player.appendChild(name);
			
			Element score = doc.createElement(&quot;score&quot;);
			score.appendChild(doc.createTextNode(&quot;&quot; + p.getScore()));
			player.appendChild(score);
		
		save.appendChild(player);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g6GYMn8EeOEaMUy0wTQ0A" name="createSaveFile" specification="_5csUwMn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>try {
			
			//create tools
			DocumentBuilderFactory docFac = DocumentBuilderFactory.newInstance();
			DocumentBuilder docBuilder;
			docBuilder = docFac.newDocumentBuilder();
			
			//create doc
			Document doc = docBuilder.newDocument();
			
			//root
			Element rootElem = doc.createElement(&quot;savedGames&quot;);
			doc.appendChild(rootElem);
			
			//write file
			TransformerFactory tranFact = TransformerFactory.newInstance();
			Transformer transformer = tranFact.newTransformer();
			transformer.setOutputProperty(OutputKeys.INDENT, &quot;yes&quot;);
			transformer.setOutputProperty(&quot;{http://xml.apache.org/xslt}indent-amount&quot;, &quot;2&quot;);
			DOMSource source = new DOMSource(doc);
			StreamResult result = new StreamResult(new File(&quot;saves.xml&quot;));
			transformer.transform(source, result);
			
		} catch (Exception e){
			System.out.println(&quot;Error writing save file. Sorry about that&quot;);
		}
		
		
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5cp4gMn8EeOEaMUy0wTQ0A" name="play" method="_5g44RMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hD3aMn8EeOEaMUy0wTQ0A">
            <body>Play a full game of countdown</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5cp4gcn8EeOEaMUy0wTQ0A" name="playCustomGame" method="_5g44Rcn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hD3acn8EeOEaMUy0wTQ0A">
            <body>Allows the playing of a custom game of countdown
	 * In this game type the user specifies which rounds
	 * they would like to play</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5cp4gsn8EeOEaMUy0wTQ0A" name="play" visibility="private" method="_5g44Rsn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hD3asn8EeOEaMUy0wTQ0A">
            <body>Plays the game from a starting pos
	 * 
	 * Handles the actual playing of the game
	 * 
	 * @param start The round number to start from</body>
          </ownedComment>
          <ownedParameter xmi:id="_5cqfkMn8EeOEaMUy0wTQ0A" name="start">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5cqfkcn8EeOEaMUy0wTQ0A" name="printWelcome" visibility="private" method="_5g44SMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hD3a8n8EeOEaMUy0wTQ0A">
            <body>Prints out a nice friendly welcome message
	 * to make the players feel all warm and fuzzy inside</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5cqfksn8EeOEaMUy0wTQ0A" name="printClose" visibility="private" method="_5g44Scn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hD3bMn8EeOEaMUy0wTQ0A">
            <body>Prints a final message</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5crGoMn8EeOEaMUy0wTQ0A" name="load" method="_5g5fUMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hD3bsn8EeOEaMUy0wTQ0A">
            <body>Loads the game</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5crGocn8EeOEaMUy0wTQ0A" name="save" visibility="private" method="_5g5fWMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hEecMn8EeOEaMUy0wTQ0A">
            <body>Saves the game</body>
          </ownedComment>
          <ownedParameter xmi:id="_5crGosn8EeOEaMUy0wTQ0A" name="roundNoValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5csUwMn8EeOEaMUy0wTQ0A" name="createSaveFile" visibility="private" method="_5g6GYMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hEec8n8EeOEaMUy0wTQ0A">
            <body>Creates the save file if this is the first time this game has been played</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5fkCkMn8EeOEaMUy0wTQ0A" name="Countdown" method="_5g4RPMn8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5fkCksn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5fkCk8n8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5hD3Zsn8EeOEaMUy0wTQ0A">
            <body>The constructor for the countdown class. Takes a GameObjects object
	 * @param go The GameObjects</body>
          </ownedComment>
          <ownedParameter xmi:id="_5fkCkcn8EeOEaMUy0wTQ0A" name="go" type="_5c2s0Mn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5fkClMn8EeOEaMUy0wTQ0A" type="_5coDUMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5fkClcn8EeOEaMUy0wTQ0A" name="Countdown" method="_5g44QMn8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5fkposn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5fkpo8n8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5hD3Z8n8EeOEaMUy0wTQ0A">
            <body>The constructor for the countdown class. Takes a GameObjects object
	 * @param go The GameObjects
	 * @param timerActive Is the timer to be active?</body>
          </ownedComment>
          <ownedParameter xmi:id="_5fkpoMn8EeOEaMUy0wTQ0A" name="go" type="_5c2s0Mn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5fkpocn8EeOEaMUy0wTQ0A" name="timerActive">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5fkppMn8EeOEaMUy0wTQ0A" type="_5coDUMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5fkppcn8EeOEaMUy0wTQ0A" name="printWinner" visibility="private" method="_5g44Ssn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hD3bcn8EeOEaMUy0wTQ0A">
            <body>Announces the winner of the game
	 * 
	 * @param winner the games winner
	 * @param loser the games loser</body>
          </ownedComment>
          <ownedParameter xmi:id="_5fkppsn8EeOEaMUy0wTQ0A" name="winner" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5fkpp8n8EeOEaMUy0wTQ0A" name="loser" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5gJRYMn8EeOEaMUy0wTQ0A" name="loadSelector" visibility="private" method="_5g5fUcn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hD3b8n8EeOEaMUy0wTQ0A">
            <body>Allows the player(s) to select a game to load
	 * 
	 * @param saves the nodelist of save</body>
          </ownedComment>
          <ownedParameter xmi:id="_5gJRYcn8EeOEaMUy0wTQ0A" name="saves" type="_5fi0c8n8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5gJRYsn8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5gJ4cMn8EeOEaMUy0wTQ0A" name="loadSelectorPrinter" visibility="private" method="_5g5fVMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hD3cMn8EeOEaMUy0wTQ0A">
            <body>Prints out the game details for loadSelector
	 * Here to reduce LOC
	 * 
	 * @param save The savedata
	 * @param saveMap The map to which we are storing the timestamps
	 * @param i the current iteration of the loop</body>
          </ownedComment>
          <ownedParameter xmi:id="_5gJ4ccn8EeOEaMUy0wTQ0A" name="save" type="_5fi0ccn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5gJ4csn8EeOEaMUy0wTQ0A" name="saveMap" type="_5fejA8n8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5gJ4c8n8EeOEaMUy0wTQ0A" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5gKfgcn8EeOEaMUy0wTQ0A" name="playerUpdater" visibility="private" method="_5g5fWsn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hEeccn8EeOEaMUy0wTQ0A">
            <body>Updates the players score in DOM for writing to disk
	 * 
	 * @param saveDataNodes The nodes of save
	 * @param p The player</body>
          </ownedComment>
          <ownedParameter xmi:id="_5gKfgsn8EeOEaMUy0wTQ0A" name="saveDataNodes" type="_5fi0c8n8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5gKfg8n8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5gLGkMn8EeOEaMUy0wTQ0A" name="playerSaver" visibility="private" method="_5g5fXcn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hEecsn8EeOEaMUy0wTQ0A">
            <body>A small helper method for the save method. This saves the 
	 * Player to the DOM, for writing to disk.
	 * 
	 * @param doc The Document
	 * @param save The save Element
	 * @param p the Player to be saved</body>
          </ownedComment>
          <ownedParameter xmi:id="_5gLGkcn8EeOEaMUy0wTQ0A" name="doc" type="_5fhmU8n8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5gLGksn8EeOEaMUy0wTQ0A" name="save" type="_5fiNYcn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5gLGk8n8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_5cwmMMn8EeOEaMUy0wTQ0A" name="Dictionary">
        <ownedComment xmi:id="_5hEedMn8EeOEaMUy0wTQ0A">
          <body>The dictionary for countdown

It handles wordy things</body>
        </ownedComment>
        <ownedAttribute xmi:id="_5giS8Mn8EeOEaMUy0wTQ0A" name="testing" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5giS8cn8EeOEaMUy0wTQ0A" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5giS88n8EeOEaMUy0wTQ0A" name="file" visibility="private" type="_5fd78Mn8EeOEaMUy0wTQ0A" association="_5hQrtMn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gi6Acn8EeOEaMUy0wTQ0A" name="words" visibility="private" type="_5faRkMn8EeOEaMUy0wTQ0A" association="_5hRSwcn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gjhEcn8EeOEaMUy0wTQ0A" name="nineLetterWords" visibility="private" type="_5faRkMn8EeOEaMUy0wTQ0A" isReadOnly="true" association="_5hR50cn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gkIIsn8EeOEaMUy0wTQ0A" name="nineLetterWordsChars" visibility="private" type="_5faRkMn8EeOEaMUy0wTQ0A" association="_5hR51Mn8EeOEaMUy0wTQ0A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5gkvMcn8EeOEaMUy0wTQ0A" value="new ArrayList&lt;ArrayList&lt;Character>>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5gkvM8n8EeOEaMUy0wTQ0A" name="eightLetterWords" visibility="private" type="_5faRkMn8EeOEaMUy0wTQ0A" isReadOnly="true" association="_5hSg4cn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gl9UMn8EeOEaMUy0wTQ0A" name="eightLetterWordsChars" visibility="private" type="_5faRkMn8EeOEaMUy0wTQ0A" association="_5hSg5Mn8EeOEaMUy0wTQ0A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5gl9Usn8EeOEaMUy0wTQ0A" value="new ArrayList&lt;ArrayList&lt;Character>>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g6GY8n8EeOEaMUy0wTQ0A" name="Dictionary" specification="_5cxNQMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g6GZMn8EeOEaMUy0wTQ0A" type="_5cwmMMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>load();
		getNineLetterWords();
		getEightLetterWords();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g6GZcn8EeOEaMUy0wTQ0A" name="getBestWords" specification="_5cx0U8n8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g6GZsn8EeOEaMUy0wTQ0A" name="letters">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g6GZ8n8EeOEaMUy0wTQ0A" type="_5faRkMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>//Get best nine letter words
		ArrayList&lt;String> bestWords = getWordsNine(letters);
		
		//if there is a nine letter word then return it
		if (!bestWords.isEmpty()){
			return bestWords;
		}
		
		//get best eight letter words
		bestWords = getWordEight(letters);
		
		
		/*
		 * Return bestwords.
		 * This doesn't do best words under a length of 8
		 */
		return bestWords;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g6GaMn8EeOEaMUy0wTQ0A" name="getWordsNine" specification="_5cybYcn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g6Gacn8EeOEaMUy0wTQ0A" name="letters">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g6Gasn8EeOEaMUy0wTQ0A" type="_5faRkMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>ArrayList&lt;Character> charList = new ArrayList&lt;Character>();
		ArrayList&lt;String> possibleMatches = new ArrayList&lt;String>();

		for (char ch : letters.toCharArray()) {
		  charList.add(ch);
		}
		
		Collections.sort(charList);
		
		for(ArrayList&lt;Character> word: nineLetterWordsChars){
			
			Collections.sort(word);
			
			if (word.equals(charList)){

				int index = nineLetterWordsChars.indexOf(word);
				possibleMatches.add(nineLetterWords.get(index));
			}
		}
		
		return possibleMatches;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g6tcMn8EeOEaMUy0wTQ0A" name="getWordEight" specification="_5czpgMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g6tccn8EeOEaMUy0wTQ0A" name="letters">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g6tcsn8EeOEaMUy0wTQ0A" type="_5faRkMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>ArrayList&lt;String> bestWords = new ArrayList&lt;String>();
		
		for (int i = 0; i &lt; 9; i++){
			
			
			ArrayList&lt;Character> charList = new ArrayList&lt;Character>();
			charList.clear();
			for (int j = 0; j &lt; 9 ; j++){
				
				if ( i != j){
					charList.add(letters.charAt(j));
				}
				
			}
		
			Collections.sort(charList);
			
			for(ArrayList&lt;Character> word: eightLetterWordsChars){
				
				Collections.sort(word);
				
				if (word.equals(charList)){

					int index = eightLetterWordsChars.indexOf(word);
					bestWords.add(eightLetterWords.get(index));
				}
			}
			
		}
		
		return bestWords;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g6tc8n8EeOEaMUy0wTQ0A" name="checkWord" specification="_5c0QkMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g6tdMn8EeOEaMUy0wTQ0A" name="word">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g6tdcn8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if (word == null) return false;
		
		if( (word.length() &lt;= 9 || word.length() > 0) &amp;&amp; words.contains(word.toLowerCase())){
			return true;
		}
		
		return false;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g6tdsn8EeOEaMUy0wTQ0A" name="getAnagram" specification="_5c0Qk8n8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g6td8n8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>//get a random word
		int size = nineLetterWords.size();
		
		Random r = new Random();
		String word = nineLetterWords.get(r.nextInt(size));
		
		//break the word into chars to shuffle
		ArrayList&lt;Character> tempWord = new ArrayList&lt;Character>();
		
		for (int i = 0; i &lt; 9; i++){
			
			tempWord.add(i, word.charAt(i));
		}
		
		Collections.shuffle(tempWord);
		
		//put string back together for returning
		StringBuilder sb = new StringBuilder(tempWord.size());
		
		for (char ch: tempWord){
			
			sb.append(ch);
		}
		
		String returnWord = sb.toString();
		
		return returnWord;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g6teMn8EeOEaMUy0wTQ0A" name="load" specification="_5c03oMn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>if (testing){
			file = new File(&quot;smalldictionary.txt&quot;);
		}else{
			file = new File(&quot;dictionary.txt&quot;);
		}
		
		try(BufferedReader br = new BufferedReader(new FileReader(file));) {
			 
			String CurrentLine;
			words = new ArrayList&lt;String>();
 
			
 
			while ((CurrentLine = br.readLine()) != null) {
				
				if (CurrentLine.length() &lt;= 9){
					words.add(CurrentLine);
				}
			}
 
		} catch (FileNotFoundException fnfe){
			System.err.println(&quot;Error: dictionary not found&quot;);
		}catch (IOException e){
			System.err.println(&quot;Error: Reading file failed. File must be currupt&quot;);
		} catch (Exception e){
			System.out.println(&quot;I broke :( Sorry about that!&quot;);
			System.out.println(&quot;Technical junk: &quot; + e.getClass().getName());
		}
		
		if (testing){
			
			System.out.println(&quot;Dictionary loaded. \n&quot; + words.size() + 
					&quot; words have been loaded&quot;);
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5cxNQMn8EeOEaMUy0wTQ0A" name="Dictionary" method="_5g6GY8n8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5cx0UMn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5cx0Ucn8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5hEedcn8EeOEaMUy0wTQ0A">
            <body>Constructor for the Dictionary class</body>
          </ownedComment>
          <ownedParameter xmi:id="_5cx0Usn8EeOEaMUy0wTQ0A" type="_5cwmMMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5cx0U8n8EeOEaMUy0wTQ0A" name="getBestWords" method="_5g6GZcn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hEedsn8EeOEaMUy0wTQ0A">
            <body>Get the best word for the letters
	 * 
	 * @param letters Random string to be solved
	 * @return ArrayList&lt;String></body>
          </ownedComment>
          <ownedParameter xmi:id="_5cx0VMn8EeOEaMUy0wTQ0A" name="letters">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5gM7wMn8EeOEaMUy0wTQ0A" type="_5faRkMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5cybYcn8EeOEaMUy0wTQ0A" name="getWordsNine" method="_5g6GaMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hEed8n8EeOEaMUy0wTQ0A">
            <body>Gets all nine letter words that could be made from the anagram
	 * @param letters
	 * @return ArrayList&lt;String> All matches</body>
          </ownedComment>
          <ownedParameter xmi:id="_5cybYsn8EeOEaMUy0wTQ0A" name="letters">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5gM7wcn8EeOEaMUy0wTQ0A" type="_5faRkMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5czpgMn8EeOEaMUy0wTQ0A" name="getWordEight" method="_5g6tcMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hEeeMn8EeOEaMUy0wTQ0A">
            <body>Gets all the best eight letter words
	 * 
	 * @param letters the letters
	 * @return the matches</body>
          </ownedComment>
          <ownedParameter xmi:id="_5czpgcn8EeOEaMUy0wTQ0A" name="letters">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5gM7wsn8EeOEaMUy0wTQ0A" type="_5faRkMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5c0QkMn8EeOEaMUy0wTQ0A" name="checkWord" method="_5g6tc8n8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hEeecn8EeOEaMUy0wTQ0A">
            <body>Check if a word is real according to dictionary
	 * 
	 * @param word
	 * @return boolean</body>
          </ownedComment>
          <ownedParameter xmi:id="_5c0Qkcn8EeOEaMUy0wTQ0A" name="word">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5c0Qksn8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5c0Qk8n8EeOEaMUy0wTQ0A" name="getAnagram" method="_5g6tdsn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hEeesn8EeOEaMUy0wTQ0A">
            <body>Get an anagram
	 * 
	 * @return String[]</body>
          </ownedComment>
          <ownedParameter xmi:id="_5c0QlMn8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5c03oMn8EeOEaMUy0wTQ0A" name="load" visibility="private" method="_5g6teMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hEee8n8EeOEaMUy0wTQ0A">
            <body>Loads the dictionary file</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_5c2s0Mn8EeOEaMUy0wTQ0A" name="GameObjects">
        <ownedComment xmi:id="_5hEefMn8EeOEaMUy0wTQ0A">
          <body>I got fed up of having to pass lots of parameters so 
I created a class to pass them in</body>
        </ownedComment>
        <ownedAttribute xmi:id="_5gmkYcn8EeOEaMUy0wTQ0A" name="pOne" type="_5dJnwMn8EeOEaMUy0wTQ0A" association="_5hTH8cn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gmkY8n8EeOEaMUy0wTQ0A" name="pTwo" type="_5dJnwMn8EeOEaMUy0wTQ0A" association="_5hTvAcn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gnLccn8EeOEaMUy0wTQ0A" name="dict" type="_5cwmMMn8EeOEaMUy0wTQ0A" association="_5hTvBMn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gnLc8n8EeOEaMUy0wTQ0A" name="leaders" type="_5dTYwMn8EeOEaMUy0wTQ0A" association="_5hUWEcn8EeOEaMUy0wTQ0A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g6tecn8EeOEaMUy0wTQ0A" name="GameObjects" specification="_5fqwQMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g6tesn8EeOEaMUy0wTQ0A" name="pOne" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g6te8n8EeOEaMUy0wTQ0A" name="pTwo" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g6tfMn8EeOEaMUy0wTQ0A" name="dict" type="_5cwmMMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g6tfcn8EeOEaMUy0wTQ0A" name="leaders" type="_5dTYwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g6tfsn8EeOEaMUy0wTQ0A" type="_5c2s0Mn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>this.pOne = pOne;
		this.pTwo = pTwo;
		this.dict = dict;
		this.leaders = leaders;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5fqwQMn8EeOEaMUy0wTQ0A" name="GameObjects" method="_5g6tecn8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5frXVMn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5frXVcn8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_5frXUMn8EeOEaMUy0wTQ0A" name="pOne" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5frXUcn8EeOEaMUy0wTQ0A" name="pTwo" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5frXUsn8EeOEaMUy0wTQ0A" name="dict" type="_5cwmMMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5frXU8n8EeOEaMUy0wTQ0A" name="leaders" type="_5dTYwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5frXVsn8EeOEaMUy0wTQ0A" type="_5c2s0Mn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_5c5wIMn8EeOEaMUy0wTQ0A" clientDependency="_5gNi0Mn8EeOEaMUy0wTQ0A" name="GenerateSolution">
        <ownedComment xmi:id="_5hEefcn8EeOEaMUy0wTQ0A">
          <body>Generate a solution to the number round

It does this by generating all possible
combinations of the number with +-/*, then check if
any of them are right</body>
        </ownedComment>
        <ownedAttribute xmi:id="_5gnygMn8EeOEaMUy0wTQ0A" name="solutions" visibility="package" type="_5faRkMn8EeOEaMUy0wTQ0A" association="_5hU9IMn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5goZkMn8EeOEaMUy0wTQ0A" name="numbers" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5goZkcn8EeOEaMUy0wTQ0A" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5goZlMn8EeOEaMUy0wTQ0A" name="target" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_5gNi0Mn8EeOEaMUy0wTQ0A" client="_5c5wIMn8EeOEaMUy0wTQ0A" supplier="_5gGOEcn8EeOEaMUy0wTQ0A" contract="_5gGOEcn8EeOEaMUy0wTQ0A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g7Ugsn8EeOEaMUy0wTQ0A" name="GenerateSolution" specification="_5gOJ4Mn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g7Ug8n8EeOEaMUy0wTQ0A" name="n" type="_5faRkMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g7UhMn8EeOEaMUy0wTQ0A" name="t">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g7Uhcn8EeOEaMUy0wTQ0A" type="_5c5wIMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>solutions = new ArrayList&lt;String>();

		numbers = new int[6];

		int counter = 0;
		for(int i : n) {

			numbers[counter] = i;
			counter++;

		}

		target = t;

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g7Uhsn8EeOEaMUy0wTQ0A" name="run" specification="_5c6-Qcn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>try {
			generateSolutions();
		} catch (Exception e) {
			e.printStackTrace();
		}

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g7Uh8n8EeOEaMUy0wTQ0A" name="generateSolutions" specification="_5c6-Qsn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>//first case

		mathString[] msArray = new mathString[6];

		int count1 = 0;

		for(int n : numbers) {

			mathString ms = new mathString();

			ms.value = n;
			ms.string = String.valueOf(n);

			msArray[count1] = ms;

			count1++;

		}

		for(mathString m : calc(msArray)) {

			if(m.value == target){
				solutions.add(m.string);
				//System.out.println(&quot;Stuff has been added&quot;);
			}

		}

		//rest of the cases

		while ((numbers = nextPermutation(numbers)) != null ) {

			mathString[] msArray2 = new mathString[6];

			int count2 = 0;

			for(int n : numbers) {

				mathString ms = new mathString();

				ms.value = n;
				ms.string = String.valueOf(n);

				msArray2[count2] = ms;

				count2++;

			}

			for(mathString m : calc(msArray2)) {

				if(m.value == target){
					solutions.add(m.string);
					//System.out.println(&quot;added : &quot; + m.string + &quot; : &quot; + m.value + &quot; : &quot; + target);
				}

			}

		}

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g7UiMn8EeOEaMUy0wTQ0A" name="nextPermutation" specification="_5c7lUMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g7Uicn8EeOEaMUy0wTQ0A" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5g7Uisn8EeOEaMUy0wTQ0A" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g7Ui8n8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5g7UjMn8EeOEaMUy0wTQ0A" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>// 1. finds the largest k, that c[k] &lt; c[k+1]
		int first = getFirst( c );
		if ( first == -1 ) return null; // no greater permutation
		// 2. find last index toSwap, that c[k] &lt; c[toSwap]
		int toSwap = c.length - 1;
		while ( c[ first ] >= c[ toSwap ] )
			--toSwap;
		// 3. swap elements with indexes first and last
		swap( c, first++, toSwap );
		// 4. reverse sequence from k+1 to n (inclusive) 
		toSwap = c.length - 1;
		while ( first &lt; toSwap )
			swap( c, first++, toSwap-- );
		return c;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g77kMn8EeOEaMUy0wTQ0A" name="getFirst" specification="_5c8MYcn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g77kcn8EeOEaMUy0wTQ0A" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5g77ksn8EeOEaMUy0wTQ0A" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g77k8n8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>for (int i = c.length - 2; i >= 0; --i)
			if (c[i] &lt; c[i + 1])
				return i;
		return -1;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g77lMn8EeOEaMUy0wTQ0A" name="swap" specification="_5c8zcMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g77lcn8EeOEaMUy0wTQ0A" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5g77lsn8EeOEaMUy0wTQ0A" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g77l8n8EeOEaMUy0wTQ0A" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g77mMn8EeOEaMUy0wTQ0A" name="j">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>int tmp = c[ i ];
		c[ i ] = c[ j ];
		c[ j ] = tmp;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g77mcn8EeOEaMUy0wTQ0A" name="calc" specification="_5ftzkMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g77msn8EeOEaMUy0wTQ0A" name="mathStrings" type="_5c6XMMn8EeOEaMUy0wTQ0A">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5g77m8n8EeOEaMUy0wTQ0A" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g77nMn8EeOEaMUy0wTQ0A" type="_5c6XMMn8EeOEaMUy0wTQ0A" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5g77ncn8EeOEaMUy0wTQ0A" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>mathString calculated[] = new mathString[ (int) Math.pow(4, mathStrings.length -1)];

		int i = 0;
		mathString ms;

		if (mathStrings.length == 6){

			//get all possible combinations for first 3 numbers
			mathString msa[] = new mathString[3];
			msa[0] = mathStrings[0];
			msa[1] = mathStrings[1];
			msa[2] = mathStrings[2];
			mathString[] ms1 = calc (msa);

			//get all possible combinations for last 3 numbers
			msa[0] = mathStrings[3];
			msa[1] = mathStrings[4];
			msa[2] = mathStrings[5];
			mathString[] ms2 = calc (msa);

			//merge them to give 1024 possible values
			for (int index1 = 0; index1 &lt; ms1.length; index1++){

				for (int index2 = 0; index2 &lt; ms2.length; index2++){

					ms = new mathString();
					ms.string = &quot;(&quot; + ms1[index1] + &quot;)+(&quot; + ms2[index2] + &quot;)&quot;;
					ms.value = ms1[index1].value + ms2[index2].value;

					calculated[i++] = ms;

					ms = new mathString();
					ms.string = &quot;(&quot; + ms1[index1] + &quot;)-(&quot; + ms2[index2] + &quot;)&quot;;
					ms.value = ms1[index1].value - ms2[index2].value;

					calculated[i++] = ms;

					ms = new mathString();
					ms.string = &quot;(&quot; + ms1[index1] + &quot;)/(&quot; + ms2[index2] + &quot;)&quot;;
					ms.value = ms1[index1].value / ms2[index2].value;

					calculated[i++] = ms;

					ms = new mathString();
					ms.string = &quot;(&quot; + ms1[index1] + &quot;)*(&quot; + ms2[index2] + &quot;)&quot;;
					ms.value = ms1[index1].value * ms2[index2].value;

					calculated[i++] = ms;
				}
			}
		}

		else if (mathStrings.length == 3){

			mathString mswithtwo[] = new mathString[2];
			mswithtwo[0] = mathStrings[0];
			mswithtwo[1] = mathStrings[1];

			mathString[] calced = calc(mswithtwo);

			for (int index = 0; index &lt; 4; index++){

				ms = new mathString();
				ms.string = &quot;(&quot; + calced[index] + &quot;+&quot; + mathStrings[2] + &quot;)&quot;;
				ms.value = calced[index].value + mathStrings[2].value;

				calculated[i++] = ms;

				ms = new mathString();
				ms.string = &quot;(&quot; + calced[index] + &quot;-&quot; + mathStrings[2] + &quot;)&quot;;
				ms.value = calced[index].value - mathStrings[2].value;

				calculated[i++] = ms;

				ms = new mathString();
				ms.string = &quot;(&quot; + calced[index] + &quot;/&quot; + mathStrings[2] + &quot;)&quot;;
				ms.value = calced[index].value / mathStrings[2].value;

				calculated[i++] = ms;

				ms = new mathString();
				ms.string = &quot;(&quot; + calced[index] + &quot;*&quot; + mathStrings[2] + &quot;)&quot;;
				ms.value = calced[index].value * mathStrings[2].value;

				calculated[i++] = ms;
			}

		}

		else if (mathStrings.length == 2){

			//calculate for possible values

			ms = new mathString();
			ms.string = mathStrings[0] + &quot;+&quot; + mathStrings[1];
			ms.value = mathStrings[0].value + mathStrings[1].value;

			calculated[i++] = ms;

			ms = new mathString();
			ms.string = mathStrings[0] + &quot;-&quot; + mathStrings[1];
			ms.value = mathStrings[0].value - mathStrings[1].value;

			calculated[i++] = ms;

			ms = new mathString();
			ms.string = mathStrings[0] + &quot;/&quot; + mathStrings[1];
			ms.value = mathStrings[0].value / mathStrings[1].value;

			calculated[i++] = ms;

			ms = new mathString();
			ms.string = mathStrings[0] + &quot;*&quot; + mathStrings[1];
			ms.value = mathStrings[0].value * mathStrings[1].value;

			calculated[i++] = ms;
		}

		else if (mathStrings.length != 6 ){

			throw new Exception(&quot;There must be at least six mathStrings&quot;);
		}

		return calculated;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g77nsn8EeOEaMUy0wTQ0A" name="printSolutions" specification="_5c8zdcn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>if(solutions.size() > 0) {
			
			System.out.println(&quot;Here is a possible correct solution: &quot;);

			for(String i : solutions) {

				/*
				 * For some reason mathStrings where passing the above even if the weren't
				 * correct. so this hack solves that. This means the above is being used to
				 * get a small list of possible answers that is then being checked here
				 */
				ScriptEngineManager mgr = new ScriptEngineManager();
				ScriptEngine engine = mgr.getEngineByName(&quot;JavaScript&quot;);

				double calcAnswer = -111111;

				try {

					calcAnswer = (double) engine.eval(i);

				} catch (ScriptException e) {
				}

				if (calcAnswer == target){
					System.out.println(&quot;\t&quot; + i);
					break;
				}

			}
			
		} else {
			
			System.out.println(&quot;There were no perfect solutions :(&quot;);
			
		}

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5c6-Qcn8EeOEaMUy0wTQ0A" name="run" method="_5g7Uhsn8EeOEaMUy0wTQ0A"/>
        <ownedOperation xmi:id="_5c6-Qsn8EeOEaMUy0wTQ0A" name="generateSolutions" visibility="private" method="_5g7Uh8n8EeOEaMUy0wTQ0A" raisedException="_5gPYAcn8EeOEaMUy0wTQ0A"/>
        <ownedOperation xmi:id="_5c7lUMn8EeOEaMUy0wTQ0A" name="nextPermutation" visibility="private" method="_5g7UiMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5c7lUcn8EeOEaMUy0wTQ0A" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5c8MYMn8EeOEaMUy0wTQ0A" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5c7lUsn8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5c7lU8n8EeOEaMUy0wTQ0A" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5c8MYcn8EeOEaMUy0wTQ0A" name="getFirst" visibility="private" method="_5g77kMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5c8MYsn8EeOEaMUy0wTQ0A" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5c8MZMn8EeOEaMUy0wTQ0A" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5c8MY8n8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5c8zcMn8EeOEaMUy0wTQ0A" name="swap" visibility="private" method="_5g77lMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5c8zccn8EeOEaMUy0wTQ0A" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5c8zdMn8EeOEaMUy0wTQ0A" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5c8zcsn8EeOEaMUy0wTQ0A" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5c8zc8n8EeOEaMUy0wTQ0A" name="j">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5c8zdcn8EeOEaMUy0wTQ0A" name="printSolutions" method="_5g77nsn8EeOEaMUy0wTQ0A"/>
        <ownedOperation xmi:id="_5ftzkMn8EeOEaMUy0wTQ0A" name="calc" visibility="private" method="_5g77mcn8EeOEaMUy0wTQ0A" raisedException="_5gPYAcn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5ftzkcn8EeOEaMUy0wTQ0A" name="mathStrings" type="_5c6XMMn8EeOEaMUy0wTQ0A">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5fuaoMn8EeOEaMUy0wTQ0A" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5ftzksn8EeOEaMUy0wTQ0A" type="_5c6XMMn8EeOEaMUy0wTQ0A" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5ftzk8n8EeOEaMUy0wTQ0A" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5gOJ4Mn8EeOEaMUy0wTQ0A" name="GenerateSolution" method="_5g7Ugsn8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5gOw8cn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5gOw8sn8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_5gOJ4cn8EeOEaMUy0wTQ0A" name="n" type="_5faRkMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5gOw8Mn8EeOEaMUy0wTQ0A" name="t">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5gOw88n8EeOEaMUy0wTQ0A" type="_5c5wIMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <nestedClassifier xmi:type="uml:Class" xmi:id="_5c6XMMn8EeOEaMUy0wTQ0A" name="mathString" visibility="private">
          <ownedComment xmi:id="_5hEefsn8EeOEaMUy0wTQ0A">
            <body>A contraption that hold string data and the value
	 * of the maths within.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_5gpAocn8EeOEaMUy0wTQ0A" name="string" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_5gpAo8n8EeOEaMUy0wTQ0A" name="value" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g7UgMn8EeOEaMUy0wTQ0A" name="toString" specification="_5c6XMcn8EeOEaMUy0wTQ0A">
            <ownedParameter xmi:id="_5g7Ugcn8EeOEaMUy0wTQ0A" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return string;
		</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_5c6XMcn8EeOEaMUy0wTQ0A" name="toString" method="_5g7UgMn8EeOEaMUy0wTQ0A">
            <ownedParameter xmi:id="_5c6-QMn8EeOEaMUy0wTQ0A" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </nestedClassifier>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_5c_PsMn8EeOEaMUy0wTQ0A" name="Launcher">
        <ownedComment xmi:id="_5hFFgMn8EeOEaMUy0wTQ0A">
          <body>The main class for the program.
Its does lots of stuff</body>
        </ownedComment>
        <ownedAttribute xmi:id="_5gpnsMn8EeOEaMUy0wTQ0A" name="playerOne" visibility="private" type="_5dJnwMn8EeOEaMUy0wTQ0A" association="_5hU9I8n8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gpnssn8EeOEaMUy0wTQ0A" name="playerTwo" visibility="private" type="_5dJnwMn8EeOEaMUy0wTQ0A" association="_5hVkMcn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gqOwcn8EeOEaMUy0wTQ0A" name="io" visibility="private" type="_5dfmAMn8EeOEaMUy0wTQ0A" association="_5hVkNMn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gqOw8n8EeOEaMUy0wTQ0A" name="leaders" visibility="private" type="_5dTYwMn8EeOEaMUy0wTQ0A" association="_5hWLQcn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gq10cn8EeOEaMUy0wTQ0A" name="dict" visibility="private" type="_5cwmMMn8EeOEaMUy0wTQ0A" association="_5hWLRMn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gq108n8EeOEaMUy0wTQ0A" name="objects" visibility="private" type="_5c2s0Mn8EeOEaMUy0wTQ0A" association="_5hWyUcn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5grc4Mn8EeOEaMUy0wTQ0A" name="timerActive" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5grc4cn8EeOEaMUy0wTQ0A" value="true"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g77n8n8EeOEaMUy0wTQ0A" name="Launcher" specification="_5c_2wMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g77oMn8EeOEaMUy0wTQ0A" type="_5c_PsMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>io = new UserIO();
		leaders = new LeaderBoard();
		dict = new Dictionary();
		objects = new GameObjects(null, null, dict, leaders);
		
		printWelcome();
		getPlayerDetials();
		
		playGame();
		
		io.close();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g8ioMn8EeOEaMUy0wTQ0A" name="printWelcome" specification="_5c_2xMn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>io.printLines(2);
		System.out.println(&quot;Welcome to countdown\n&quot; +
				&quot;I hope you are ready to play!!\n\n&quot;+
				&quot;This Game features autosave! be amazed!\n&quot; +
				&quot;Your games are saved by magic after every round!\n\n&quot;+
				&quot;(c) Thomas Maxwell and Thomas Sinclair&quot;);
		try {
			Thread.sleep(2000);
		} catch (InterruptedException e){
			
		}
		
		io.printLines(2);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g8iocn8EeOEaMUy0wTQ0A" name="getPlayerDetials" specification="_5c_2xcn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>System.out.println(&quot;How many players are there: 1, or the better 2:&quot;);
		int playerNo = io.getNumber();
		
		while (playerNo &lt; 1 || playerNo > 2){
		
			System.err.println(&quot;There can only be one or two players, try again:&quot;);
			playerNo = io.getNumber();
		}		
		
		System.out.println(&quot;Player One enter name: &quot;);
		playerOne = new Player(io.getString(), 1);
		objects.pOne = playerOne;
		
		if (playerNo == 2){
			
			System.out.println(&quot;Player Two enter name: &quot;);
			playerTwo = new Player(io.getString(), 2);
			objects.pTwo = playerTwo;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g8iosn8EeOEaMUy0wTQ0A" name="playGame" specification="_5dAd0Mn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>boolean loop = true;

		while(loop == true) {

			io.printLines(2);
			
			//Get ready for a new game;
			playerOne.clearScore();
			if (playerTwo != null)
				playerTwo.clearScore();
			
			System.out.println(&quot;\nMain Menu\n&quot;+
							&quot;What would you like to do?\n\n&quot; +
							&quot;Play a game\t\t\t- 1\n&quot; +
							&quot;Play single round:\n&quot; +
							&quot;\tWord\t\t\t- 2\n&quot; +
							&quot;\tNumber\t\t\t- 3\n&quot; +
							&quot;\tConundrum\t\t- 4\n\n&quot; +
							&quot;View Scoreboard\t\t\t- 5\n&quot; +
							&quot;Options\t\t\t\t- 6\n&quot; +
							&quot;Quit\t\t\t\t- 7\n&quot;);

			switch(io.getNumber()) {

				case 0: break;

				case 1: gameSelector();
						break;

				case 2: WordRound wr = new WordRound(objects, timerActive);
						wr.play();
						break;

				case 3: NumberRound nr = new NumberRound(objects, timerActive);
						nr.play();
						break;

				case 4: ConundrumRound cr = new ConundrumRound(objects, timerActive);
						cr.play();
						break;

				case 5: leaderboard();
						break;

				case 6: options();
						break;
						
				case 7: loop = false;
						io.printLines(2);
						System.out.println(&quot;Exiting . . . &quot;);
						io.printLines(1);
						leaders.saveScores();
						System.exit(1);
						break;

				default:
					System.err.println(&quot;Please enter a valid option&quot;);
					break;

			} //end switch
		} //end while
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g8io8n8EeOEaMUy0wTQ0A" name="leaderboard" specification="_5dAd0cn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>io.printLines(2);
		
		System.out.println(&quot;So you would like to see how pathetic you are compared to other players huh? Okay then&quot;);
		System.out.println(&quot;How would you like to measure your lack of performance:\n&quot;);
		
		
		System.out.println(&quot;Overall leaderboard\t\t- 1\n\n&quot; +
				&quot;Full game\t\t\t- 2\n&quot; +
				&quot;Custom game\t\t\t- 3\n\n&quot; +
				&quot;Word round\t\t\t- 4\n&quot; +
				&quot;Number round\t\t\t- 5\n&quot; +
				&quot;Conundrum round\t\t\t- 6\n\n&quot; +
				&quot;Back\t\t\t\t- 7\n&quot;);
		
		switch(io.getNumber()){
		
			case 1: leaders.printScores();
					break;
			case 2: leaders.printScoresFull();
					break;
			case 3: leaders.printScoresCustom();
					break;
			case 4: leaders.printScoresWord();
					break;
			case 5: leaders.printScoresNumber();
					break;
			case 6: leaders.printScoresConundrum();
					break;
			case 7: return;
			default: System.out.println(&quot;Pick a valid option&quot;);
					leaderboard();
					break;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g8ipMn8EeOEaMUy0wTQ0A" name="gameSelector" specification="_5dAd0sn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>io.printLines(1);
		
		System.out.println(&quot;Have some options pick one:\n\n&quot; +
				&quot;Play a full game\t\t-1\n&quot; +
				&quot;Play a custom game\t\t-2\n&quot; +
				&quot;Load a game\t\t\t-3\n\n&quot; + 
				&quot;Back\t\t\t\t-4&quot;);
		
		Countdown cd = new Countdown(objects, timerActive);
		
		switch(io.getNumber()){
			
			case 1: cd.play();
					break;
			
			case 2: cd.playCustomGame();
					break;
			
			case 3: cd.load();
					break;
			
			case 4: return;
			
			default: System.out.println(&quot;Please choose a valid option, not your silly one&quot;);
					gameSelector();
		}		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g8ipcn8EeOEaMUy0wTQ0A" name="options" specification="_5dAd08n8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>io.printLines(2);
		
		System.out.println(&quot;Options:\n\n&quot; +
					&quot;Timer\t\t\t\t-1\n&quot; +
					&quot;back\t\t\t\t-2&quot;);
		
		switch (io.getNumber()){
		
		case 1: io.printShortLines(1);
				System.out.println(&quot;Would you like the timer to be active? (Yes/No) :&quot;);
				timerActive = io.getYesNo();
				if (!timerActive){
					System.out.println(&quot;Doesn't that defeat the point of countdown?&quot;);
					System.out.println(&quot;Its cheating on its highest level&quot;);
					System.out.println(&quot;Be ashamed!!!!!&quot;);
					System.out.println(&quot;As such your scores will not be stored on the leaderboard\n&quot; +
					&quot;Further more becuase cheating is shameful this always resets back to true, when&quot; +
					&quot;ever the game is luanched&quot;);
				}
				break;
		
		case 2: return;
		
		default: System.out.println(&quot;Not a valid choice. Try again!&quot;);
				break;	
		}
		
		options();	
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g8ipsn8EeOEaMUy0wTQ0A" name="main" specification="_5dBE4Mn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g8ip8n8EeOEaMUy0wTQ0A" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5g8iqMn8EeOEaMUy0wTQ0A" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>Launcher l = new Launcher();
		
		/*
		 * This line of code does nothing. It is here because I was getting
		 * annoyed at eclipse telling me that l (from above) is not being used,
		 * so I used it. 
		 * 
		 * Better yet this line of code will never ever be executed. Its completely
		 * pointless. Thank you eclipse, thanks very much.
		 */
		l.io = null;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5c_2wMn8EeOEaMUy0wTQ0A" name="Launcher" method="_5g77n8n8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5c_2wcn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5c_2wsn8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_5c_2w8n8EeOEaMUy0wTQ0A" type="_5c_PsMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5c_2xMn8EeOEaMUy0wTQ0A" name="printWelcome" visibility="private" method="_5g8ioMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hFFgcn8EeOEaMUy0wTQ0A">
            <body>Prints a welcome message to the program</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5c_2xcn8EeOEaMUy0wTQ0A" name="getPlayerDetials" visibility="private" method="_5g8iocn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hFFgsn8EeOEaMUy0wTQ0A">
            <body>Get the details of the players an if there is one or two players</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5dAd0Mn8EeOEaMUy0wTQ0A" name="playGame" visibility="private" method="_5g8iosn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hFFg8n8EeOEaMUy0wTQ0A">
            <body>Get the users idea of wonderfulness</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5dAd0cn8EeOEaMUy0wTQ0A" name="leaderboard" visibility="private" method="_5g8io8n8EeOEaMUy0wTQ0A"/>
        <ownedOperation xmi:id="_5dAd0sn8EeOEaMUy0wTQ0A" name="gameSelector" visibility="private" method="_5g8ipMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hFFhMn8EeOEaMUy0wTQ0A">
            <body>A little bit of code to select a game type.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5dAd08n8EeOEaMUy0wTQ0A" name="options" visibility="private" method="_5g8ipcn8EeOEaMUy0wTQ0A"/>
        <ownedOperation xmi:id="_5dBE4Mn8EeOEaMUy0wTQ0A" name="main" isStatic="true" method="_5g8ipsn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5dBE4cn8EeOEaMUy0wTQ0A" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5dBE48n8EeOEaMUy0wTQ0A" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_5dC6EMn8EeOEaMUy0wTQ0A" clientDependency="_5gQmIMn8EeOEaMUy0wTQ0A" name="TheTimer">
        <ownedAttribute xmi:id="_5grc48n8EeOEaMUy0wTQ0A" name="m" visibility="package" type="_5dEvQMn8EeOEaMUy0wTQ0A" association="_5hXZYcn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gsD8Mn8EeOEaMUy0wTQ0A" name="time" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_5gQmIMn8EeOEaMUy0wTQ0A" client="_5dC6EMn8EeOEaMUy0wTQ0A" supplier="_5gGOEcn8EeOEaMUy0wTQ0A" contract="_5gGOEcn8EeOEaMUy0wTQ0A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g8iqcn8EeOEaMUy0wTQ0A" name="TheTimer" specification="_5dDhIMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g9JsMn8EeOEaMUy0wTQ0A" type="_5dC6EMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>m = new Monitor();
		time = 30;

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g9Jscn8EeOEaMUy0wTQ0A" name="run" specification="_5dDhJMn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>if(time == 30)
			System.out.println(&quot;Let the countdown begin, 30 Seconds Left!&quot;);
		else if(time == 20)
			System.out.println(&quot;20 Seconds Left!&quot;);
		else if(time == 10)
			System.out.println(&quot;10 Seconds Left!&quot;);
		else if(time &lt; 6 &amp;&amp; time > 0)
			System.out.print(time + &quot; &quot;);
		else if(time == 0) {
			System.out.println(&quot;\nTime's up!\n&quot;);
			doNotify();
		}		
		
		time--;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g9Jssn8EeOEaMUy0wTQ0A" name="doWait" specification="_5dDhJcn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>synchronized(m){
			try{
				m.wait();
			} catch(InterruptedException e){}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g9Js8n8EeOEaMUy0wTQ0A" name="doNotify" specification="_5dDhJsn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>synchronized(m){
			m.notifyAll();
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5dDhIMn8EeOEaMUy0wTQ0A" name="TheTimer" method="_5g8iqcn8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5dDhIcn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5dDhIsn8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_5dDhI8n8EeOEaMUy0wTQ0A" type="_5dC6EMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5dDhJMn8EeOEaMUy0wTQ0A" name="run" method="_5g9Jscn8EeOEaMUy0wTQ0A"/>
        <ownedOperation xmi:id="_5dDhJcn8EeOEaMUy0wTQ0A" name="doWait" method="_5g9Jssn8EeOEaMUy0wTQ0A"/>
        <ownedOperation xmi:id="_5dDhJsn8EeOEaMUy0wTQ0A" name="doNotify" method="_5g9Js8n8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_5dEvQMn8EeOEaMUy0wTQ0A" name="Monitor">
        <ownedComment xmi:id="_5hFFhcn8EeOEaMUy0wTQ0A">
          <body>Object used to pass signals between threads</body>
        </ownedComment>
        <ownedOperation xmi:id="_5dEvQcn8EeOEaMUy0wTQ0A" name="Monitor" visibility="package">
          <eAnnotations xmi:id="_5dEvQsn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5dEvQ8n8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_5dEvRcn8EeOEaMUy0wTQ0A" type="_5dEvQMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_5dFWUMn8EeOEaMUy0wTQ0A" name="Round" isAbstract="true">
        <ownedAttribute xmi:id="_5gsD8sn8EeOEaMUy0wTQ0A" name="dict" visibility="package" type="_5cwmMMn8EeOEaMUy0wTQ0A" association="_5hXZZMn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gsD88n8EeOEaMUy0wTQ0A" name="pOne" visibility="package" type="_5dJnwMn8EeOEaMUy0wTQ0A" association="_5hYAccn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gsrAMn8EeOEaMUy0wTQ0A" name="pTwo" visibility="package" type="_5dJnwMn8EeOEaMUy0wTQ0A" association="_5hYAdMn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gsrAcn8EeOEaMUy0wTQ0A" name="twoPlayer" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5gsrAsn8EeOEaMUy0wTQ0A" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5gsrA8n8EeOEaMUy0wTQ0A" name="roundType" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5gsrBMn8EeOEaMUy0wTQ0A" name="board" visibility="package" type="_5dTYwMn8EeOEaMUy0wTQ0A" association="_5hYngcn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gtSEMn8EeOEaMUy0wTQ0A" name="keyPress" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5gtSEcn8EeOEaMUy0wTQ0A" name="io" visibility="package" type="_5dfmAMn8EeOEaMUy0wTQ0A" association="_5hZOkMn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gtSEsn8EeOEaMUy0wTQ0A" name="timerActive" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g9JtMn8EeOEaMUy0wTQ0A" name="Round" specification="_5fyFAMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g9Jtcn8EeOEaMUy0wTQ0A" name="dict" type="_5cwmMMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g9Jtsn8EeOEaMUy0wTQ0A" name="pOne" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g9Jt8n8EeOEaMUy0wTQ0A" name="pTwo" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g9JuMn8EeOEaMUy0wTQ0A" name="board" type="_5dTYwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g9Jucn8EeOEaMUy0wTQ0A" name="roundType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g9Jusn8EeOEaMUy0wTQ0A" name="timerActive">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g9Ju8n8EeOEaMUy0wTQ0A" type="_5dFWUMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>this.dict = dict;
		this.pOne = pOne;
		this.pTwo = pTwo;
		this.board = board;
		this.roundType = roundType;
		this.timerActive = timerActive;
		io = new UserIO();

		if (pTwo != null){
			twoPlayer = true;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g9JvMn8EeOEaMUy0wTQ0A" name="CountdownTimer" specification="_5dGkcMn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(2);

		TheTimer timer = new TheTimer();
		Buzzer buzzer = new Buzzer(twoPlayer, io);

		if(roundType.equals(&quot;ConundrumRound&quot;))
			scheduler.schedule(buzzer, 0, TimeUnit.SECONDS);
		scheduler.scheduleAtFixedRate(timer, 1, 1, TimeUnit.SECONDS);
		
		if(roundType.equals(&quot;ConundrumRound&quot;)) {
			buzzer.doWait();
			keyPress = buzzer.getKeyPress();
		} else {
			timer.doWait();
		}

		scheduler.shutdownNow();

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g9Jvcn8EeOEaMUy0wTQ0A" name="roundType" specification="_5dGkcsn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g9Jvsn8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return roundType;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g9wwMn8EeOEaMUy0wTQ0A" name="printWelcome" specification="_5dHLg8n8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g9wwcn8EeOEaMUy0wTQ0A" name="currentRound">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>io.printLines(2);
		System.out.println(&quot;Welcome to the &quot; + currentRound + &quot; round&quot;);
		io.printShortLines(1);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5dGkcMn8EeOEaMUy0wTQ0A" name="CountdownTimer" method="_5g9JvMn8EeOEaMUy0wTQ0A"/>
        <ownedOperation xmi:id="_5dGkcsn8EeOEaMUy0wTQ0A" name="roundType" method="_5g9Jvcn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5dHLgMn8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5dHLgsn8EeOEaMUy0wTQ0A" name="play" isAbstract="true"/>
        <ownedOperation xmi:id="_5dHLg8n8EeOEaMUy0wTQ0A" name="printWelcome" method="_5g9wwMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5dHLhMn8EeOEaMUy0wTQ0A" name="currentRound">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5fyFAMn8EeOEaMUy0wTQ0A" name="Round" method="_5g9JtMn8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5fysEcn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5fysEsn8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_5fyFAcn8EeOEaMUy0wTQ0A" name="dict" type="_5cwmMMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5fyFAsn8EeOEaMUy0wTQ0A" name="pOne" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5fyFA8n8EeOEaMUy0wTQ0A" name="pTwo" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5fyFBMn8EeOEaMUy0wTQ0A" name="board" type="_5dTYwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5fyFBcn8EeOEaMUy0wTQ0A" name="roundType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5fysEMn8EeOEaMUy0wTQ0A" name="timerActive">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5fysE8n8EeOEaMUy0wTQ0A" type="_5dFWUMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_5dJnwMn8EeOEaMUy0wTQ0A" name="Player">
        <ownedComment xmi:id="_5hFFhsn8EeOEaMUy0wTQ0A">
          <body>This class holds all the details of one player of the game
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_5gt5IMn8EeOEaMUy0wTQ0A" name="name" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5gt5Icn8EeOEaMUy0wTQ0A" name="score" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5gt5Isn8EeOEaMUy0wTQ0A" name="playerNo" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g9wwsn8EeOEaMUy0wTQ0A" name="Player" specification="_5dKO0Mn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g9ww8n8EeOEaMUy0wTQ0A" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g9wxMn8EeOEaMUy0wTQ0A" name="playerNo">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g9wxcn8EeOEaMUy0wTQ0A" type="_5dJnwMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>name = n;
		score = 0;
		this.playerNo = playerNo;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g9wxsn8EeOEaMUy0wTQ0A" name="updateScore" specification="_5dK14Mn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g9wx8n8EeOEaMUy0wTQ0A" name="points">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>score =+ points;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g9wyMn8EeOEaMUy0wTQ0A" name="getNumber" specification="_5dK14sn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g9wycn8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return playerNo;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g9wysn8EeOEaMUy0wTQ0A" name="clearScore" specification="_5dK15Mn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>score = 0;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5dKO0Mn8EeOEaMUy0wTQ0A" name="Player" method="_5g9wwsn8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5dKO08n8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5dKO1Mn8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5hFFh8n8EeOEaMUy0wTQ0A">
            <body>Constructor for the player class
	 * @param n of the player</body>
          </ownedComment>
          <ownedParameter xmi:id="_5dKO0cn8EeOEaMUy0wTQ0A" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5dKO0sn8EeOEaMUy0wTQ0A" name="playerNo">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5dKO1cn8EeOEaMUy0wTQ0A" type="_5dJnwMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5dK14Mn8EeOEaMUy0wTQ0A" name="updateScore" method="_5g9wxsn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hFFiMn8EeOEaMUy0wTQ0A">
            <body>Update the players score
	 * 
	 * @param points The number of points to be given to the player</body>
          </ownedComment>
          <ownedParameter xmi:id="_5dK14cn8EeOEaMUy0wTQ0A" name="points">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5dK14sn8EeOEaMUy0wTQ0A" name="getNumber" method="_5g9wyMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hFFicn8EeOEaMUy0wTQ0A">
            <body>Return the player number
	 * 
	 * @return The player number</body>
          </ownedComment>
          <ownedParameter xmi:id="_5dK148n8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5dK15Mn8EeOEaMUy0wTQ0A" name="clearScore" method="_5g9wysn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hFFisn8EeOEaMUy0wTQ0A">
            <body>Clears the players score</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_5dLc8Mn8EeOEaMUy0wTQ0A" name="NumberRound">
        <ownedComment xmi:id="_5hFFi8n8EeOEaMUy0wTQ0A">
          <body>The number round of the countdown game
 *</body>
        </ownedComment>
        <generalization xmi:id="_5f29gsn8EeOEaMUy0wTQ0A" general="_5dFWUMn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gugMMn8EeOEaMUy0wTQ0A" name="ans1" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5gugMsn8EeOEaMUy0wTQ0A" name="ans2" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5gugNMn8EeOEaMUy0wTQ0A" name="working1" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5gvHQcn8EeOEaMUy0wTQ0A" name="working2" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5gvHQ8n8EeOEaMUy0wTQ0A" name="target" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5gvuUMn8EeOEaMUy0wTQ0A" name="numbers" visibility="private" type="_5faRkMn8EeOEaMUy0wTQ0A" association="_5hZOk8n8EeOEaMUy0wTQ0A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g-X0Mn8EeOEaMUy0wTQ0A" name="NumberRound" specification="_5f0hQMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g-X0cn8EeOEaMUy0wTQ0A" name="dict" type="_5cwmMMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g-X0sn8EeOEaMUy0wTQ0A" name="pOne" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g-X08n8EeOEaMUy0wTQ0A" name="pTwo" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g-X1Mn8EeOEaMUy0wTQ0A" name="board" type="_5dTYwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g-X1cn8EeOEaMUy0wTQ0A" name="timerActive">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g-X1sn8EeOEaMUy0wTQ0A" type="_5dLc8Mn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>super(dict, pOne, pTwo, board, LeaderBoard.NUMBERROUND, timerActive);
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g-X18n8EeOEaMUy0wTQ0A" name="NumberRound" specification="_5f1IUMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g-X2Mn8EeOEaMUy0wTQ0A" name="dict" type="_5cwmMMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g-X2cn8EeOEaMUy0wTQ0A" name="pOne" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g-X2sn8EeOEaMUy0wTQ0A" name="pTwo" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g-X28n8EeOEaMUy0wTQ0A" name="board" type="_5dTYwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g-X3Mn8EeOEaMUy0wTQ0A" type="_5dLc8Mn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>super(dict, pOne, pTwo, board, LeaderBoard.NUMBERROUND, true);
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g-X3cn8EeOEaMUy0wTQ0A" name="NumberRound" specification="_5f1vYMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g-X3sn8EeOEaMUy0wTQ0A" name="o" type="_5c2s0Mn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g-X38n8EeOEaMUy0wTQ0A" name="timerActive">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g-X4Mn8EeOEaMUy0wTQ0A" type="_5dLc8Mn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>this(o.dict, o.pOne, o.pTwo, o.leaders, timerActive);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g-X4cn8EeOEaMUy0wTQ0A" name="NumberRound" specification="_5f1vZsn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g-X4sn8EeOEaMUy0wTQ0A" name="o" type="_5c2s0Mn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g-X48n8EeOEaMUy0wTQ0A" type="_5dLc8Mn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>this(o.dict, o.pOne, o.pTwo, o.leaders, true);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g-X5Mn8EeOEaMUy0wTQ0A" name="play" specification="_5dOgQMn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>printWelcome(&quot;number&quot;);

		//Generate numbers
		generateNumbers();
		System.out.print(&quot;The numbers are: &quot;);

		for(Integer n: numbers){
			System.out.print(n + &quot; &quot;);
		}
		System.out.println();

		//Generate target number
		Random r = new Random();
		target = r.nextInt(1000);
		r = null;
		System.out.println(&quot;The target is : &quot; + target + &quot;\n&quot;);
		
		//Begin generating solutions
		ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);
		GenerateSolution generate = new GenerateSolution(numbers, target);
		scheduler.schedule(generate, 0, TimeUnit.SECONDS);
		
		if(timerActive)
			CountdownTimer();

		//Get the answer for player one
		getAnswer(pOne);

		//Get the answer for player two if they exist
		if (pTwo != null){

			getAnswer(pTwo);

			if ( ans1 == ans2)
				System.out.println(&quot;You both have the same number, but lets see if the working is right&quot;);
			else if ( Math.abs(target - ans1) &lt; Math.abs(target - ans2))
				System.out.println(pOne.getName() + &quot; is closer, but lets see if the working is right\n&quot;);
			else
				System.out.println(pTwo.getName() + &quot; is closer, but lets see if the working is right\n&quot;);
		}

		//Get the working for player one
		getWorking(pOne);
		returnValues val;
		while ( (val = checkWorking( ans1, working1)) == returnValues.ERROR){
			getWorking(pOne);
		}

		if ( val == returnValues.TRUE )
			calulatePoints(pOne);
		else
			System.out.println(&quot;Sorry &quot; + pOne.getName() + &quot; you working is wrong&quot;);

		//Get the working for player two if they exist
		if (pTwo != null){

			getWorking(pTwo);
			while ( (val = checkWorking( ans2, working2)) == returnValues.ERROR){
				getWorking(pTwo);
			}
			if ( val == returnValues.TRUE)
				calulatePoints(pTwo);
			else
				System.out.println(&quot;Sorry &quot; + pTwo.getName() + &quot; you working is wrong&quot;);
		}
		
		//Print all solutions
		System.out.println();
		generate.printSolutions();

		//TODO
		// this
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g-X5cn8EeOEaMUy0wTQ0A" name="generateNumbers" specification="_5dOgQcn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>ArrayList&lt;Integer> high = new ArrayList&lt;>();
		int[] low = new int[20];
		numbers = new ArrayList&lt;>(); 
		int noHigh;
		Random r = new Random();

		//fill the low array
		for (int i = 0; i &lt; 10; i++){
			low[i] = i + 1;
			low[19-i] = i + 1;
		}

		//fill the high array
		high.add(25);
		high.add(50);
		high.add(75);
		high.add(100);

		//get a value for the number of high number between 0 and 4
		do {

			System.out.println(&quot;Please enter the number of high numbers you would like: &quot;);
			noHigh = io.getNumber();
		}while(noHigh > 4 || noHigh &lt; 0);

		for(int i = 0; i &lt; noHigh; i++){

			int rNo = r.nextInt(high.size());
			numbers.add(high.get( (int) rNo));
			high.remove( (int) rNo);
		}

		for(int i = 0; i &lt; 6 - noHigh; i++){

			numbers.add(low[r.nextInt(20)]);
		}

		r = null;
		Collections.shuffle(numbers);	
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g--4Mn8EeOEaMUy0wTQ0A" name="calulatePoints" specification="_5f2WcMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g--4cn8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <language>java</language>
          <body>int temp;

		if(p.getNumber() == 1)
			temp = Math.abs(target - ans1);
		else
			temp = Math.abs(target - ans2);

		if (temp == 0){

			System.out.println(p.getName() + &quot; Got it perfectly. Is awarded 10 points&quot;);
			if (timerActive)
				board.addScore(p.getName(), roundType, 10);
			p.updateScore(10);
		} else if ( temp &lt; 5 ){ 

			System.out.println(p.getName() + &quot; got within 5 and is awarded 7 points&quot;);
			if (timerActive)
				board.addScore(p.getName(), roundType, 10);
			p.updateScore(7);
		} else if ( temp &lt; 10){ 

			System.out.println(p.getName() + &quot; got within 10 and is awarded 5 points&quot;);
			if (timerActive)
				board.addScore(p.getName(), roundType, 10);
			p.updateScore(5);
		}else {

			System.out.println(&quot;Nice try &quot; + p.getName() + &quot; but no points&quot;);
			if (timerActive)
				board.addScore(p.getName(), roundType, 10);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g--4sn8EeOEaMUy0wTQ0A" name="checkWorking" specification="_5dPHUMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g--48n8EeOEaMUy0wTQ0A" name="ans">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g--5Mn8EeOEaMUy0wTQ0A" name="working">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g--5cn8EeOEaMUy0wTQ0A" type="_5dMEAMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>@SuppressWarnings(&quot;unchecked&quot;)
		ArrayList&lt;Integer> numberClone = (ArrayList&lt;Integer>) numbers.clone();

		//First check the players working with a little JS
		ScriptEngineManager mgr = new ScriptEngineManager();
		ScriptEngine engine = mgr.getEngineByName(&quot;JavaScript&quot;);

		double calcAnswer;

		try {

			calcAnswer = (double) engine.eval(working);

		} catch (ScriptException e) {
			System.out.println(&quot;Hmm your working seems to be off, try again entering it again in a different format&quot;);
			return returnValues.ERROR;
		}

		if (calcAnswer == ans){
			System.out.println(&quot;Your working comes to &quot; + calcAnswer + &quot;, so it is correct well done&quot;);
		}else{
			System.out.println(&quot;Bad new your working is wrong. Your working gives : &quot; + calcAnswer);
			return returnValues.FALSE;
		}

		//Now to check if they have used the right numbers

		//First reduce the string to the numbers
		StringBuilder sb = new StringBuilder(working.length());
	    for(int i = 0; i &lt; working.length(); i++){
	        final char c = working.charAt(i);
	        if(c > 47 &amp;&amp; c &lt; 58){
	            sb.append(c);
	        }else{
	        	sb.append(' ');
	        }
	    }

	    working = sb.toString();

	    //tokenise
	    StringTokenizer st = new StringTokenizer(working);
	    ArrayList&lt;Integer> numbers = new ArrayList&lt;>();
	    while (st.hasMoreTokens()){
	    	numbers.add( Integer.parseInt(st.nextToken()));
	    }

	    //Finally check if the right number have been used
	    for (int i: numbers){

	    	if (numberClone.contains(i)){
	    		numberClone.remove( (Integer) i);
	    	} else {
	    		System.out.println(&quot;But you have made up some numbers to do it&quot;);
	    		return returnValues.FALSE;
	    	}
	    }

		//If this is reached then it must be correct
		return returnValues.TRUE;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g--5sn8EeOEaMUy0wTQ0A" name="getAnswer" specification="_5f2Wc8n8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g--58n8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <language>java</language>
          <body>System.out.println(p.getName() + &quot; enter your answer: &quot;);

		if (p.getNumber() == 1)
			ans1 = io.getNumber();
		else
			ans2 = io.getNumber();

		System.out.println();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g--6Mn8EeOEaMUy0wTQ0A" name="getWorking" specification="_5f29gMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g--6cn8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <language>java</language>
          <body>System.out.println(p.getName() + &quot; using + - * / please enter your working: &quot;);

		if (p.getNumber() == 1)
			working1 = io.getString();
		else
			working2 = io.getString();	

		System.out.println();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5dOgQMn8EeOEaMUy0wTQ0A" name="play" method="_5g-X5Mn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hFskcn8EeOEaMUy0wTQ0A">
            <body>Plays a round of countdown;</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5dOgQcn8EeOEaMUy0wTQ0A" name="generateNumbers" visibility="private" method="_5g-X5cn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hFsksn8EeOEaMUy0wTQ0A">
            <body>Generate the number for the game</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5dPHUMn8EeOEaMUy0wTQ0A" name="checkWorking" visibility="private" method="_5g--4sn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hFslMn8EeOEaMUy0wTQ0A">
            <body>Check a players working
	 * @param ans The answer
	 * @param working The working
	 * @return true if the working is correct, false otherwise</body>
          </ownedComment>
          <ownedParameter xmi:id="_5dPHUcn8EeOEaMUy0wTQ0A" name="ans">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5dPHUsn8EeOEaMUy0wTQ0A" name="working">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5f2Wcsn8EeOEaMUy0wTQ0A" type="_5dMEAMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5f0hQMn8EeOEaMUy0wTQ0A" name="NumberRound" method="_5g-X0Mn8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5f0hRsn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5f0hR8n8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5hFFjMn8EeOEaMUy0wTQ0A">
            <body>The constructor for a number round
	 * 
	 * @param dict The dictionary file
	 * @param pOne Player one
	 * @param pTwo Player two if they exist
	 * @param board the leaderboard
	 * @param timerActive if the timer is active</body>
          </ownedComment>
          <ownedParameter xmi:id="_5f0hQcn8EeOEaMUy0wTQ0A" name="dict" type="_5cwmMMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5f0hQsn8EeOEaMUy0wTQ0A" name="pOne" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5f0hQ8n8EeOEaMUy0wTQ0A" name="pTwo" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5f0hRMn8EeOEaMUy0wTQ0A" name="board" type="_5dTYwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5f0hRcn8EeOEaMUy0wTQ0A" name="timerActive">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5f0hSMn8EeOEaMUy0wTQ0A" type="_5dLc8Mn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5f1IUMn8EeOEaMUy0wTQ0A" name="NumberRound" method="_5g-X18n8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5f1IVcn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5f1IVsn8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5hFFjcn8EeOEaMUy0wTQ0A">
            <body>The constructor for a number round
	 * 
	 * @param dict The dictionary file
	 * @param pOne Player one
	 * @param pTwo Player two if they exist
	 * @param board the leaderboard
	 * @param timerActive if the timer is active</body>
          </ownedComment>
          <ownedParameter xmi:id="_5f1IUcn8EeOEaMUy0wTQ0A" name="dict" type="_5cwmMMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5f1IUsn8EeOEaMUy0wTQ0A" name="pOne" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5f1IU8n8EeOEaMUy0wTQ0A" name="pTwo" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5f1IVMn8EeOEaMUy0wTQ0A" name="board" type="_5dTYwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5f1IV8n8EeOEaMUy0wTQ0A" type="_5dLc8Mn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5f1vYMn8EeOEaMUy0wTQ0A" name="NumberRound" method="_5g-X3cn8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5f1vY8n8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5f1vZMn8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5hFFjsn8EeOEaMUy0wTQ0A">
            <body>A constructor for the number round
	 * @param o A gameObjects object.</body>
          </ownedComment>
          <ownedParameter xmi:id="_5f1vYcn8EeOEaMUy0wTQ0A" name="o" type="_5c2s0Mn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5f1vYsn8EeOEaMUy0wTQ0A" name="timerActive">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5f1vZcn8EeOEaMUy0wTQ0A" type="_5dLc8Mn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5f1vZsn8EeOEaMUy0wTQ0A" name="NumberRound" method="_5g-X4cn8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5f1vaMn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5f1vacn8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5hFskMn8EeOEaMUy0wTQ0A">
            <body>A constructor for the number round
	 * @param o A gameObjects object.</body>
          </ownedComment>
          <ownedParameter xmi:id="_5f1vZ8n8EeOEaMUy0wTQ0A" name="o" type="_5c2s0Mn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5f1vasn8EeOEaMUy0wTQ0A" type="_5dLc8Mn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5f2WcMn8EeOEaMUy0wTQ0A" name="calulatePoints" visibility="private" method="_5g--4Mn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hFsk8n8EeOEaMUy0wTQ0A">
            <body>Calculate a players points
	 * @param p The player the score is being calculated</body>
          </ownedComment>
          <ownedParameter xmi:id="_5f2Wccn8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5f2Wc8n8EeOEaMUy0wTQ0A" name="getAnswer" visibility="private" method="_5g--5sn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hFslcn8EeOEaMUy0wTQ0A">
            <body>Get an answer from the player
	 * @param p The player the answer is from</body>
          </ownedComment>
          <ownedParameter xmi:id="_5f2WdMn8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5f29gMn8EeOEaMUy0wTQ0A" name="getWorking" visibility="private" method="_5g--6Mn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hFslsn8EeOEaMUy0wTQ0A">
            <body>Get the working from a player
	 * @param p The layer the working is from</body>
          </ownedComment>
          <ownedParameter xmi:id="_5f29gcn8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
        </ownedOperation>
        <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_5dMEAMn8EeOEaMUy0wTQ0A" name="returnValues">
          <ownedLiteral xmi:id="_5dMrEMn8EeOEaMUy0wTQ0A" name="TRUE"/>
          <ownedLiteral xmi:id="_5dMrEcn8EeOEaMUy0wTQ0A" name="FALSE"/>
          <ownedLiteral xmi:id="_5dMrEsn8EeOEaMUy0wTQ0A" name="ERROR"/>
        </nestedClassifier>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_5dTYwMn8EeOEaMUy0wTQ0A" name="LeaderBoard">
        <ownedComment xmi:id="_5hFsl8n8EeOEaMUy0wTQ0A">
          <body>The leaderBoard</body>
        </ownedComment>
        <ownedAttribute xmi:id="_5gwVYMn8EeOEaMUy0wTQ0A" name="scoresFull" visibility="private" type="_5faRkMn8EeOEaMUy0wTQ0A" association="_5hZ1ocn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gw8ccn8EeOEaMUy0wTQ0A" name="scoresNumber" visibility="private" type="_5faRkMn8EeOEaMUy0wTQ0A" association="_5hZ1pMn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gxjgcn8EeOEaMUy0wTQ0A" name="scoresWord" visibility="private" type="_5faRkMn8EeOEaMUy0wTQ0A" association="_5hacscn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gyKkcn8EeOEaMUy0wTQ0A" name="scoresConundrum" visibility="private" type="_5faRkMn8EeOEaMUy0wTQ0A" association="_5hactMn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gyxocn8EeOEaMUy0wTQ0A" name="scoresCustom" visibility="private" type="_5faRkMn8EeOEaMUy0wTQ0A" association="_5hbDwcn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5gzYsMn8EeOEaMUy0wTQ0A" name="WORDROUND" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5gzYscn8EeOEaMUy0wTQ0A" value="&quot;WordRound&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5gzYssn8EeOEaMUy0wTQ0A" name="NUMBERROUND" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5gzYs8n8EeOEaMUy0wTQ0A" value="&quot;NumberRound&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5gzYtMn8EeOEaMUy0wTQ0A" name="CONUNDRUMROUND" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5gzYtcn8EeOEaMUy0wTQ0A" value="&quot;ConundrumRound&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5gzYtsn8EeOEaMUy0wTQ0A" name="FULLGAME" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5gz_wMn8EeOEaMUy0wTQ0A" value="&quot;FullGame&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5gz_wcn8EeOEaMUy0wTQ0A" name="CUSTOMGAME" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_5gz_wsn8EeOEaMUy0wTQ0A" value="&quot;CustomGame&quot;"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g_l9cn8EeOEaMUy0wTQ0A" name="LeaderBoard" specification="_5dXqMMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g_l9sn8EeOEaMUy0wTQ0A" type="_5dTYwMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>scoresFull 		= new ArrayList&lt;Score>();
		scoresCustom	= new ArrayList&lt;Score>();
		scoresNumber 	= new ArrayList&lt;Score>();
		scoresWord 		= new ArrayList&lt;Score>();
		scoresConundrum = new ArrayList&lt;Score>();
		
		loadScores();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g_l98n8EeOEaMUy0wTQ0A" name="loadScores" specification="_5dXqNMn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>try{
			
			File xmlFile = new File(&quot;leaderboard.xml&quot;);
			DocumentBuilderFactory docFac = DocumentBuilderFactory.newInstance();
			DocumentBuilder docBuilder = docFac.newDocumentBuilder();
			Document doc = docBuilder.parse(xmlFile);
			
			//Quick sanity formating. Should be fine unless someone has been playing with the file . . .
			doc.getDocumentElement().normalize();
			
			readhelper(doc, WORDROUND, scoresWord);
			readhelper(doc, NUMBERROUND, scoresNumber);
			readhelper(doc, CONUNDRUMROUND, scoresConundrum);
			readhelper(doc, FULLGAME, scoresFull);
			readhelper(doc, CUSTOMGAME, scoresCustom);
			
		} catch (Exception e){
			System.out.println(&quot;Error loading leaderboard file: sorry&quot;);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g_l-Mn8EeOEaMUy0wTQ0A" name="readhelper" specification="_5gUQgMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5g_l-cn8EeOEaMUy0wTQ0A" name="doc" type="_5fhmU8n8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5g_l-sn8EeOEaMUy0wTQ0A" name="round">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5g_l-8n8EeOEaMUy0wTQ0A" name="scores" type="_5faRkMn8EeOEaMUy0wTQ0A"/>
          <language>java</language>
          <body>NodeList nl = doc.getElementsByTagName(round);

		//If there are child nodes, get the nodes else return empty handed
		if (nl.item(0).hasChildNodes()){
			 nl = nl.item(0).getChildNodes();
		} else {
			return;
		}
		
		//Loop for the child nodes getting the data
		for (int i = 0; i &lt; nl.getLength(); i++){
			
			Node n = nl.item(i);
			
			if ( n.getNodeType() == Node.ELEMENT_NODE){
				
				Element e = (Element) n;
				
				Score score = new Score(
						e.getElementsByTagName(&quot;name&quot;).item(0).getTextContent(),
						e.getElementsByTagName(&quot;round&quot;).item(0).getTextContent(),
						Integer.parseInt(e.getElementsByTagName(&quot;points&quot;).item(0).getTextContent())
						);
				
				scores.add(score);
			}
		}
		
		Collections.sort(scores);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g_l_Mn8EeOEaMUy0wTQ0A" name="saveScores" specification="_5dYRQMn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>try {
			
			//create tools
			DocumentBuilderFactory docFac = DocumentBuilderFactory.newInstance();
			DocumentBuilder docBuilder = docFac.newDocumentBuilder();
			
			//create doc
			Document doc = docBuilder.newDocument();
			
			//root
			Element rootElem = doc.createElement(&quot;leaderboard&quot;);
			doc.appendChild(rootElem);
			

			//Write all the scores
			writehelper(doc, rootElem, scoresFull, FULLGAME);
			writehelper(doc, rootElem, scoresWord, WORDROUND);
			writehelper(doc, rootElem, scoresNumber, NUMBERROUND);
			writehelper(doc, rootElem, scoresConundrum, CONUNDRUMROUND);
			writehelper(doc, rootElem, scoresCustom, CUSTOMGAME);
			
			
			//write file
			TransformerFactory tranFact = TransformerFactory.newInstance();
			Transformer transformer = tranFact.newTransformer();
			transformer.setOutputProperty(OutputKeys.INDENT, &quot;yes&quot;);
			transformer.setOutputProperty(&quot;{http://xml.apache.org/xslt}indent-amount&quot;, &quot;2&quot;);
			DOMSource source = new DOMSource(doc);
			StreamResult result = new StreamResult(new File(&quot;leaderboard.xml&quot;));
			transformer.transform(source, result);
			
			
		} catch (Exception e){
			System.out.println(&quot;Error writing leaderboard file. Sorry about that&quot;);
		}

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hANAMn8EeOEaMUy0wTQ0A" name="writehelper" specification="_5gVeoMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5hANAcn8EeOEaMUy0wTQ0A" name="doc" type="_5fhmU8n8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5hANAsn8EeOEaMUy0wTQ0A" name="rootElem" type="_5fiNYcn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5hANA8n8EeOEaMUy0wTQ0A" name="scores" type="_5faRkMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5hANBMn8EeOEaMUy0wTQ0A" name="subrootName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>Element subroot = doc.createElement(subrootName);
		rootElem.appendChild(subroot);
		
		if (scores.isEmpty())
			return;
		
		for(Score s: scores){
			
			Element score = doc.createElement(&quot;score&quot;);
			subroot.appendChild(score);
			
			Element name = doc.createElement(&quot;name&quot;);
			name.appendChild(doc.createTextNode(s.name));
			score.appendChild(name);
			
			Element round = doc.createElement(&quot;round&quot;);
			round.appendChild(doc.createTextNode(s.round));
			score.appendChild(round);
			
			Element points = doc.createElement(&quot;points&quot;);
			points.appendChild(doc.createTextNode(String.valueOf(s.score)));
			score.appendChild(points);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hANBcn8EeOEaMUy0wTQ0A" name="printScores" specification="_5gWFscn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5hANBsn8EeOEaMUy0wTQ0A" name="list" type="_5faRkMn8EeOEaMUy0wTQ0A"/>
          <language>java</language>
          <body>UserIO io = new UserIO();
		io.printLines(1);
		
		if (list.isEmpty()){
			System.out.println(&quot;hmm no one has made any high scores, I would say why don't you try but i doubt you could . . .&quot;);
			return;
		}
		
		System.out.println(&quot;Name\t\t: Round\t\t: Score\n&quot;);
		
		for(Score s: list) {

			System.out.println(s);

		}

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hANB8n8EeOEaMUy0wTQ0A" name="printScoresFull" specification="_5dY4UMn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>printScores(scoresFull);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hANCMn8EeOEaMUy0wTQ0A" name="printScoresCustom" specification="_5dZfYMn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>printScores(scoresCustom);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hANCcn8EeOEaMUy0wTQ0A" name="printScoresWord" specification="_5dZfYcn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>printScores(scoresWord);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hANCsn8EeOEaMUy0wTQ0A" name="printScoresConundrum" specification="_5dZfYsn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>printScores(scoresConundrum);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hANC8n8EeOEaMUy0wTQ0A" name="printScoresNumber" specification="_5dZfY8n8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>printScores(scoresNumber);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hA0EMn8EeOEaMUy0wTQ0A" name="printScores" specification="_5daGcMn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>ArrayList&lt;Score> scores = new ArrayList&lt;>();
		
		scores.addAll(scoresConundrum);
		scores.addAll(scoresFull);
		scores.addAll(scoresNumber);
		scores.addAll(scoresWord);
		
		Collections.sort(scores);
		
		printScores(scores);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hA0Ecn8EeOEaMUy0wTQ0A" name="addScore" specification="_5daGccn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5hA0Esn8EeOEaMUy0wTQ0A" name="player">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5hA0E8n8EeOEaMUy0wTQ0A" name="round">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5hA0FMn8EeOEaMUy0wTQ0A" name="points">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>//Create a new score object
		Score score = new Score(player, round, points);
		
		
		//Add it to its special LeaderBoard
		if ( round.equals(NUMBERROUND))
			addScoreHelper(scoresNumber, score);
		
		else if (round.equals(WORDROUND))
			addScoreHelper(scoresWord, score);
		
		else if (round.equals(CONUNDRUMROUND))
			addScoreHelper(scoresConundrum, score);
		
		else if (round.equals(FULLGAME))
			addScoreHelper(scoresFull, score);
		
		else if (round.equals(CUSTOMGAME))
			addScoreHelper(scoresCustom, score);
		
		else 
			throw new IllegalArgumentException(&quot;Not a valid round type&quot;);
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hA0Fcn8EeOEaMUy0wTQ0A" name="addScoreHelper" specification="_5gXT0sn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5hA0Fsn8EeOEaMUy0wTQ0A" name="board" type="_5faRkMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5hA0F8n8EeOEaMUy0wTQ0A" name="score" type="_5dUm4Mn8EeOEaMUy0wTQ0A"/>
          <language>java</language>
          <body>board.add(score);
		Collections.sort(board);
		
		//Let user know if they are at the top of the leaderboard.
		if (board.get(0).equals(score)){
			
			System.out.println(&quot;Hey, your at the top of the leaderBoard for &quot; + score.round + &quot;. Well done you!&quot;);
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5dXqMMn8EeOEaMUy0wTQ0A" name="LeaderBoard" method="_5g_l9cn8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5dXqMcn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5dXqMsn8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5hFsmsn8EeOEaMUy0wTQ0A">
            <body>The constructor for the LeaderBoard</body>
          </ownedComment>
          <ownedParameter xmi:id="_5dXqM8n8EeOEaMUy0wTQ0A" type="_5dTYwMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5dXqNMn8EeOEaMUy0wTQ0A" name="loadScores" visibility="private" method="_5g_l98n8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hFsm8n8EeOEaMUy0wTQ0A">
            <body>Loads the scores stored in an xml file.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5dYRQMn8EeOEaMUy0wTQ0A" name="saveScores" method="_5g_l_Mn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hFsncn8EeOEaMUy0wTQ0A">
            <body>Saves the scores stored in the leaderboard</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5dY4UMn8EeOEaMUy0wTQ0A" name="printScoresFull" method="_5hANB8n8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hFsoMn8EeOEaMUy0wTQ0A">
            <body>Prints out all of the full game scores</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5dZfYMn8EeOEaMUy0wTQ0A" name="printScoresCustom" method="_5hANCMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hGToMn8EeOEaMUy0wTQ0A">
            <body>Prints out all of the scores for the custom games</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5dZfYcn8EeOEaMUy0wTQ0A" name="printScoresWord" method="_5hANCcn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hGTocn8EeOEaMUy0wTQ0A">
            <body>Prints out all of the word scores</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5dZfYsn8EeOEaMUy0wTQ0A" name="printScoresConundrum" method="_5hANCsn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hGTosn8EeOEaMUy0wTQ0A">
            <body>Prints out all of the conundrum scores</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5dZfY8n8EeOEaMUy0wTQ0A" name="printScoresNumber" method="_5hANC8n8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hGTo8n8EeOEaMUy0wTQ0A">
            <body>Prints out all of the number round scores</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5daGcMn8EeOEaMUy0wTQ0A" name="printScores" method="_5hA0EMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hGTpMn8EeOEaMUy0wTQ0A">
            <body>Prints out all of the scores</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5daGccn8EeOEaMUy0wTQ0A" name="addScore" method="_5hA0Ecn8EeOEaMUy0wTQ0A" raisedException="_5gXT0Mn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hGTpcn8EeOEaMUy0wTQ0A">
            <body>Adds a score to the leaderboard.
	 * 
	 * @param player the player
	 * @param round The round
	 * @param points The score</body>
          </ownedComment>
          <ownedParameter xmi:id="_5daGcsn8EeOEaMUy0wTQ0A" name="player">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5daGc8n8EeOEaMUy0wTQ0A" name="round">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5daGdMn8EeOEaMUy0wTQ0A" name="points">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5gUQgMn8EeOEaMUy0wTQ0A" name="readhelper" visibility="private" method="_5g_l-Mn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hFsnMn8EeOEaMUy0wTQ0A">
            <body>Reads the values from the DOM tree created in loadScores.
	 * 
	 * @param doc The document
	 * @param round the roundtype to be loaded
	 * @param scores the ArrayList&lt;Scores> to put the loaded scores into</body>
          </ownedComment>
          <ownedParameter xmi:id="_5gUQgcn8EeOEaMUy0wTQ0A" name="doc" type="_5fhmU8n8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5gUQgsn8EeOEaMUy0wTQ0A" name="round">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5gUQg8n8EeOEaMUy0wTQ0A" name="scores" type="_5faRkMn8EeOEaMUy0wTQ0A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5gVeoMn8EeOEaMUy0wTQ0A" name="writehelper" visibility="private" method="_5hANAMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hFsnsn8EeOEaMUy0wTQ0A">
            <body>This method writes the contents of an arraylist&lt;Score> to the DOM
	 * 
	 * @param doc The document
	 * @param rootElem the root element of the doc
	 * @param scores the arrayList of scores
	 * @param subrootName the name to give the added subroot</body>
          </ownedComment>
          <ownedParameter xmi:id="_5gVeocn8EeOEaMUy0wTQ0A" name="doc" type="_5fhmU8n8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5gVeosn8EeOEaMUy0wTQ0A" name="rootElem" type="_5fiNYcn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5gVeo8n8EeOEaMUy0wTQ0A" name="scores" type="_5faRkMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5gVepMn8EeOEaMUy0wTQ0A" name="subrootName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5gWFscn8EeOEaMUy0wTQ0A" name="printScores" visibility="private" method="_5hANBcn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hFsn8n8EeOEaMUy0wTQ0A">
            <body>Prints out all of the scores to the terminal</body>
          </ownedComment>
          <ownedParameter xmi:id="_5gWFssn8EeOEaMUy0wTQ0A" name="list" type="_5faRkMn8EeOEaMUy0wTQ0A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5gXT0sn8EeOEaMUy0wTQ0A" name="addScoreHelper" visibility="private" method="_5hA0Fcn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hGTpsn8EeOEaMUy0wTQ0A">
            <body>Adds the score to the leaderboard
	 * Created to reduce LOc in addScore above
	 * 
	 * @param board The board
	 * @param score The score</body>
          </ownedComment>
          <ownedParameter xmi:id="_5gX64Mn8EeOEaMUy0wTQ0A" name="board" type="_5faRkMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5gX64cn8EeOEaMUy0wTQ0A" name="score" type="_5dUm4Mn8EeOEaMUy0wTQ0A"/>
        </ownedOperation>
        <nestedClassifier xmi:type="uml:Class" xmi:id="_5dUm4Mn8EeOEaMUy0wTQ0A" clientDependency="_5gTCYcn8EeOEaMUy0wTQ0A" name="Score" visibility="private">
          <ownedComment xmi:id="_5hFsmMn8EeOEaMUy0wTQ0A">
            <body>A small class to store the score details</body>
          </ownedComment>
          <ownedAttribute xmi:id="_5gz_w8n8EeOEaMUy0wTQ0A" name="name" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_5gz_xcn8EeOEaMUy0wTQ0A" name="round" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_5g0m0cn8EeOEaMUy0wTQ0A" name="score" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_5gTCYcn8EeOEaMUy0wTQ0A" client="_5dUm4Mn8EeOEaMUy0wTQ0A" supplier="_5gSbUMn8EeOEaMUy0wTQ0A" contract="_5gSbUMn8EeOEaMUy0wTQ0A"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g--6sn8EeOEaMUy0wTQ0A" name="Score" specification="_5dV1AMn8EeOEaMUy0wTQ0A">
            <ownedParameter xmi:id="_5g--68n8EeOEaMUy0wTQ0A" name="p">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5g--7Mn8EeOEaMUy0wTQ0A" name="r">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5g--7cn8EeOEaMUy0wTQ0A" name="score">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5g--7sn8EeOEaMUy0wTQ0A" type="_5dUm4Mn8EeOEaMUy0wTQ0A" direction="return"/>
            <language>java</language>
            <body>this.name = p;
			this.round = r;
			this.score = score;
		</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g_l8Mn8EeOEaMUy0wTQ0A" name="compareTo" specification="_5f4ysMn8EeOEaMUy0wTQ0A">
            <ownedParameter xmi:id="_5g_l8cn8EeOEaMUy0wTQ0A" name="s" type="_5dUm4Mn8EeOEaMUy0wTQ0A"/>
            <ownedParameter xmi:id="_5g_l8sn8EeOEaMUy0wTQ0A" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>final int BEFORE = -1;
		    final int EQUAL = 0;
		    final int AFTER = 1;
		    
		    if (score == s.score) return EQUAL;
		    else if (score &lt; s.score) return AFTER;
		    else return BEFORE;
		</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5g_l88n8EeOEaMUy0wTQ0A" name="toString" specification="_5dWcEMn8EeOEaMUy0wTQ0A">
            <ownedParameter xmi:id="_5g_l9Mn8EeOEaMUy0wTQ0A" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (name + &quot;\t\t: &quot; + round + &quot;\t\t: &quot; + score);
			
		</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_5dV1AMn8EeOEaMUy0wTQ0A" name="Score" method="_5g--6sn8EeOEaMUy0wTQ0A">
            <eAnnotations xmi:id="_5dV1BMn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_5dV1Bcn8EeOEaMUy0wTQ0A" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_5hFsmcn8EeOEaMUy0wTQ0A">
              <body>The constructor for score
		 * 
		 * @param p the player
		 * @param r the round
		 * @param score the score</body>
            </ownedComment>
            <ownedParameter xmi:id="_5dV1Acn8EeOEaMUy0wTQ0A" name="p">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5dV1Asn8EeOEaMUy0wTQ0A" name="r">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5dV1A8n8EeOEaMUy0wTQ0A" name="score">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_5dV1Bsn8EeOEaMUy0wTQ0A" type="_5dUm4Mn8EeOEaMUy0wTQ0A" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_5dWcEMn8EeOEaMUy0wTQ0A" name="toString" method="_5g_l88n8EeOEaMUy0wTQ0A">
            <ownedParameter xmi:id="_5dWcEcn8EeOEaMUy0wTQ0A" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_5f4ysMn8EeOEaMUy0wTQ0A" name="compareTo" method="_5g_l8Mn8EeOEaMUy0wTQ0A">
            <ownedParameter xmi:id="_5f4yscn8EeOEaMUy0wTQ0A" name="s" type="_5dUm4Mn8EeOEaMUy0wTQ0A"/>
            <ownedParameter xmi:id="_5f4yssn8EeOEaMUy0wTQ0A" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
        </nestedClassifier>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_5dfmAMn8EeOEaMUy0wTQ0A" name="UserIO">
        <ownedComment xmi:id="_5hGTp8n8EeOEaMUy0wTQ0A">
          <body>An input handler
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_5g1N4Mn8EeOEaMUy0wTQ0A" name="scan" visibility="private" type="_5f9EIsn8EeOEaMUy0wTQ0A" association="_5hbq0cn8EeOEaMUy0wTQ0A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hA0GMn8EeOEaMUy0wTQ0A" name="UserIO" specification="_5dfmAcn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5hA0Gcn8EeOEaMUy0wTQ0A" type="_5dfmAMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>scan = new Scanner(System.in);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hA0Gsn8EeOEaMUy0wTQ0A" name="getString" specification="_5dgNE8n8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5hA0G8n8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>try {
			
			String input = scan.nextLine();
			
			return input;
			
		} catch(InputMismatchException e) {
			
			System.out.println(&quot;Please enter a String: &quot;);
			return getString();
			
		}	//end try
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hBbIMn8EeOEaMUy0wTQ0A" name="getNumber" specification="_5dgNFcn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5hBbIcn8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>try {

			int input = scan.nextInt();
			scan.nextLine();

			return input;

		} catch(InputMismatchException e) {

			System.err.println(&quot;Please enter a number: &quot;);
			scan.nextLine();
			return getNumber();

		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hBbIsn8EeOEaMUy0wTQ0A" name="getYesNo" specification="_5dg0Icn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5hBbI8n8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>try {
			
			String input = scan.nextLine().toUpperCase();
			
			if ( input.equals(&quot;Y&quot;) || input.equals(&quot;YES&quot;))
				return true;
			else if ( input.equals(&quot;N&quot;) || input.equals(&quot;NO&quot;))
				return false;
			else 
				throw new InputMismatchException();
			
			
		} catch (InputMismatchException e){
			System.out.println(&quot;Please enter Y/N&quot;);
			e.printStackTrace();
			return getYesNo();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hBbJMn8EeOEaMUy0wTQ0A" name="close" specification="_5dg0I8n8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>scan.close();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hBbJcn8EeOEaMUy0wTQ0A" name="clear" specification="_5dg0JMn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>scan.nextLine();
		
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hBbJsn8EeOEaMUy0wTQ0A" name="printLines" specification="_5dhbMMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5hBbJ8n8EeOEaMUy0wTQ0A" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>for(int i = 0; i &lt; n - 1; i++)
			System.out.println(&quot;--------------------------------------------------------------------------------&quot;);
		
		System.out.println(&quot;--------------------------------------------------------------------------------\n&quot;);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hBbKMn8EeOEaMUy0wTQ0A" name="printShortLines" specification="_5dhbMsn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5hBbKcn8EeOEaMUy0wTQ0A" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>for(int i = 0; i &lt; n - 1; i++)
			System.out.println(&quot;---------------------------&quot;);
		
		System.out.println(&quot;---------------------------\n&quot;);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5dfmAcn8EeOEaMUy0wTQ0A" name="UserIO" method="_5hA0GMn8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5dgNEMn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5dgNEcn8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_5dgNEsn8EeOEaMUy0wTQ0A" type="_5dfmAMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5dgNE8n8EeOEaMUy0wTQ0A" name="getString" method="_5hA0Gsn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hGTqMn8EeOEaMUy0wTQ0A">
            <body>Takes in a string from the user
	 * @return the user entered string</body>
          </ownedComment>
          <ownedParameter xmi:id="_5dgNFMn8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5dgNFcn8EeOEaMUy0wTQ0A" name="getNumber" method="_5hBbIMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hGTqcn8EeOEaMUy0wTQ0A">
            <body>Takes in a number from the user
	 * @return the user entered number</body>
          </ownedComment>
          <ownedParameter xmi:id="_5dg0IMn8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5dg0Icn8EeOEaMUy0wTQ0A" name="getYesNo" method="_5hBbIsn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hGTqsn8EeOEaMUy0wTQ0A">
            <body>Gets a yes no answer from the user
	 * 
	 * @return true for yes, false for no</body>
          </ownedComment>
          <ownedParameter xmi:id="_5dg0Isn8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5dg0I8n8EeOEaMUy0wTQ0A" name="close" method="_5hBbJMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hGTq8n8EeOEaMUy0wTQ0A">
            <body>Close input when done</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5dg0JMn8EeOEaMUy0wTQ0A" name="clear" method="_5hBbJcn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hGTrMn8EeOEaMUy0wTQ0A">
            <body>Clear the input buffer</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5dhbMMn8EeOEaMUy0wTQ0A" name="printLines" method="_5hBbJsn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hGTrcn8EeOEaMUy0wTQ0A">
            <body>Prints out a specified amount of lines of - to separate things
	 * 
	 * @param n The number of lines to be printed</body>
          </ownedComment>
          <ownedParameter xmi:id="_5dhbMcn8EeOEaMUy0wTQ0A" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5dhbMsn8EeOEaMUy0wTQ0A" name="printShortLines" method="_5hBbKMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hGTrsn8EeOEaMUy0wTQ0A">
            <body>Prints out a specified amount of short lines of - to separate things
	 * 
	 * @param n The number of lines to be printed</body>
          </ownedComment>
          <ownedParameter xmi:id="_5dhbM8n8EeOEaMUy0wTQ0A" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_5diCQMn8EeOEaMUy0wTQ0A" name="WordRound">
        <ownedComment xmi:id="_5hGTr8n8EeOEaMUy0wTQ0A">
          <body>The word round of the game countdown</body>
        </ownedComment>
        <generalization xmi:id="_5gBVkMn8EeOEaMUy0wTQ0A" general="_5dFWUMn8EeOEaMUy0wTQ0A"/>
        <ownedAttribute xmi:id="_5g1N4sn8EeOEaMUy0wTQ0A" name="ans1" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5g108cn8EeOEaMUy0wTQ0A" name="ans2" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_5g1088n8EeOEaMUy0wTQ0A" name="letters" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hBbKsn8EeOEaMUy0wTQ0A" name="WordRound" specification="_5f-SQMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5hBbK8n8EeOEaMUy0wTQ0A" name="dict" type="_5cwmMMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5hBbLMn8EeOEaMUy0wTQ0A" name="pOne" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5hBbLcn8EeOEaMUy0wTQ0A" name="pTwo" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5hBbLsn8EeOEaMUy0wTQ0A" name="board" type="_5dTYwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5hBbL8n8EeOEaMUy0wTQ0A" name="timerActive">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5hBbMMn8EeOEaMUy0wTQ0A" type="_5diCQMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>super(dict, pOne, pTwo, board, LeaderBoard.WORDROUND, timerActive);
		//io = new UserIO();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hCCMMn8EeOEaMUy0wTQ0A" name="WordRound" specification="_5f-5Vcn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5hCCMcn8EeOEaMUy0wTQ0A" name="dict" type="_5cwmMMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5hCCMsn8EeOEaMUy0wTQ0A" name="pOne" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5hCCM8n8EeOEaMUy0wTQ0A" name="pTwo" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5hCCNMn8EeOEaMUy0wTQ0A" name="board" type="_5dTYwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5hCCNcn8EeOEaMUy0wTQ0A" type="_5diCQMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>this(dict, pOne, pTwo, board, true);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hCCNsn8EeOEaMUy0wTQ0A" name="WordRound" specification="_5f_gZcn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5hCCN8n8EeOEaMUy0wTQ0A" name="o" type="_5c2s0Mn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5hCCOMn8EeOEaMUy0wTQ0A" name="timerActive">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5hCCOcn8EeOEaMUy0wTQ0A" type="_5diCQMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>this(o.dict, o.pOne, o.pTwo, o.leaders, timerActive);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hCCOsn8EeOEaMUy0wTQ0A" name="WordRound" specification="_5gAHccn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5hCCO8n8EeOEaMUy0wTQ0A" name="o" type="_5c2s0Mn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5hCCPMn8EeOEaMUy0wTQ0A" type="_5diCQMn8EeOEaMUy0wTQ0A" direction="return"/>
          <language>java</language>
          <body>this(o.dict, o.pOne, o.pTwo, o.leaders, true);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hCCPcn8EeOEaMUy0wTQ0A" name="play" specification="_5dkegMn8EeOEaMUy0wTQ0A">
          <language>java</language>
          <body>printWelcome(&quot;word&quot;);

		letters = generateLetters();
		ArrayList&lt;String> bestAnswers = dict.getBestWords(letters);

		int pOneLen;
		int pTwoLen;

		System.out.println(&quot;The letters are: &quot; + letters+ &quot;\n&quot;);

		if(timerActive)
			CountdownTimer();

		getAnswer(pOne);

		if(pTwo != null) {

			getAnswer(pTwo);

			if (ans1.equals(ans2))
				System.out.println(&quot;You both have the same answer, let's see if they are correct&quot;);
			else if(ans1.length() == ans2.length())
				System.out.println(&quot;Both answers are the same length, let's see if they are correct&quot;);
			else if (ans1.length() > ans2.length())
				System.out.println(pOne.getName() + &quot; has the longer word, let's see if it is correct&quot;);
			else
				System.out.println(pTwo.getName() + &quot; has the longer word, let's see if it is correct&quot;);
		}

		pOneLen = checkAnswer(pOne);

		if(pTwo != null) {

			pTwoLen = checkAnswer(pTwo);

			if(pOneLen > pTwoLen) {
				System.out.println(&quot;Player 1 Wins&quot;);
				awardPoints(pOne, pOneLen);
			} else if(pOneLen &lt; pTwoLen) {
				System.out.println(&quot;Player 2 Wins&quot;);
				awardPoints(pTwo, pTwoLen);
			} else if(pOneLen + pTwoLen == 0) {
				System.out.println(&quot;Both players entered an incorrect answer or no answer at all. No Points awarded&quot;);
			} else {
				System.out.println(&quot;It's a draw&quot;);
				awardPoints(pOne, pOneLen);
				awardPoints(pTwo, pTwoLen);
			}

		} else {

			if(pOneLen > 0)
				awardPoints(pOne, pOneLen);
			else
				System.out.println(&quot;You entered an incorrect answer or no answer at all&quot;);

		}

		System.out.println(&quot;The best answers were: &quot;);
		for(String word: bestAnswers) {
			System.out.println(word);			
		}

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hCCPsn8EeOEaMUy0wTQ0A" name="generateLetters" specification="_5du2kMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5hCCP8n8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>boolean loop = true;
		int noVowels = -1;
		ArrayList&lt;Character> letters = new ArrayList&lt;>();
		Random r = new Random();
		//frequency taken from http://www.thecountdownpage.com/letters.htm
		char[] constantants = {'b','b','c','c','c','d','d','d','d','d','d','f','f','g','g','g',
					'h','h','j','k','l','l','l','l','l','m','m','m','m','n','n','n','n','n','n',
					'n','n','p','p','p','p','q','r','r','r','r','r','r','r','r','r','s','s','s',
					's','s','s','s','s','s','t','t','t','t','t','t','t','t','t','v','w','x','y',
					'z'}; 

		while( loop){
			System.out.println(&quot;How many vowels would you like?&quot;); 

			if ((noVowels = io.getNumber()) &lt; 3){
				System.out.println(&quot;Must have at least 3 vowels&quot;);
			}else if (noVowels > 5){

				System.out.println(&quot;Cant have more than 5 vowels&quot;);
			}else{
				loop = false;
			}
		}

		//get all vowels
		for (int i = 0; i &lt; noVowels; i++){

			int temp = r.nextInt(67);

			if (temp &lt; 15 ){
				letters.add('a');
			} else if(temp &lt; 36){
				letters.add('e');
			} else if(temp &lt; 49){
				letters.add('i');
			} else if(temp &lt; 62){
				letters.add('o');
			} else {
				letters.add('u');
			}
		}

		//get all constantants
		for (int i = 0; i &lt; (9 - noVowels); i++){

			int temp = r.nextInt(74);

			letters.add(constantants[temp]);
		}//close

		//mix up the letters
		Collections.shuffle(letters);

		//put string back together for returning
		StringBuilder sb = new StringBuilder(letters.size());

		for (char ch: letters){

			sb.append(ch);
		}

		return sb.toString().toUpperCase();		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hCpQMn8EeOEaMUy0wTQ0A" name="checkAnswer" specification="_5gAHdsn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5hCpQcn8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5hCpQsn8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>if(p.getNumber() == 1) {
			if(validWord(ans1))
				return ans1.length();
			else
				return 0;
		} else {
			if(validWord(ans2))
				return ans2.length();
			else
				return 0;
		}

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hCpQ8n8EeOEaMUy0wTQ0A" name="validWord" specification="_5dvdoMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5hCpRMn8EeOEaMUy0wTQ0A" name="a">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5hCpRcn8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>int count = 0;

		if(dict.checkWord(a)) {
			for(int i = 0; i &lt; a.length(); i++) {
				
				if(letters.contains(a.subSequence(i, i + 1)))
					count++;

			}

		}

		if(count == a.length())
			return true;
		else
			return false;

	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hCpRsn8EeOEaMUy0wTQ0A" name="awardPoints" specification="_5gAugcn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5hCpR8n8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5hCpSMn8EeOEaMUy0wTQ0A" name="points">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>System.out.println(p.getName() + &quot; recieves &quot; + points + &quot; Points&quot;);

		if(points == 9)
			points = points * 2;

		if(p.getNumber() == 1) {
			if (timerActive)
				board.addScore(p.getName(), roundType, 10);
			pOne.updateScore(points);
		} else {
			if (timerActive)
				board.addScore(p.getName(), roundType, 10);
			pTwo.updateScore(points);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5hCpScn8EeOEaMUy0wTQ0A" name="getAnswer" specification="_5gAuhMn8EeOEaMUy0wTQ0A">
          <ownedParameter xmi:id="_5hCpSsn8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <language>java</language>
          <body>System.out.println(p.getName() + &quot; enter your answer: &quot;);

		if (p.getNumber() == 1) {
			ans1 = io.getString().toUpperCase();
			System.out.println(&quot;Your answer is: &quot; + ans1);
		} else {
			ans2 = io.getString().toUpperCase();
			System.out.println(&quot;Your answer is: &quot; + ans2);
		}

		System.out.println();

	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_5dkegMn8EeOEaMUy0wTQ0A" name="play" method="_5hCCPcn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hG6s8n8EeOEaMUy0wTQ0A">
            <body>Play the word round</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_5du2kMn8EeOEaMUy0wTQ0A" name="generateLetters" visibility="private" method="_5hCCPsn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hG6tMn8EeOEaMUy0wTQ0A">
            <body>asks the user for the number of vowels required and then
	 * generates and returns a string
	 * 
	 * @return A string of generated letters</body>
          </ownedComment>
          <ownedParameter xmi:id="_5du2kcn8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5dvdoMn8EeOEaMUy0wTQ0A" name="validWord" visibility="private" method="_5hCpQ8n8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hG6tsn8EeOEaMUy0wTQ0A">
            <body>Checks if the word is valid
	 * 
	 * @param the word to be checked
	 * @return true if valid word, false otherwise</body>
          </ownedComment>
          <ownedParameter xmi:id="_5dvdocn8EeOEaMUy0wTQ0A" name="a">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5dvdosn8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5f-SQMn8EeOEaMUy0wTQ0A" name="WordRound" method="_5hBbKsn8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5f-5Usn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5f-5U8n8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5hGTsMn8EeOEaMUy0wTQ0A">
            <body>Constructor for the word round
	 * @param dict the Dictionary file
	 * @param pOne Player one
	 * @param pTwo Player two
	 * @param board the leaderboard
	 * @param timerActive if the timer is active</body>
          </ownedComment>
          <ownedParameter xmi:id="_5f-SQcn8EeOEaMUy0wTQ0A" name="dict" type="_5cwmMMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5f-SQsn8EeOEaMUy0wTQ0A" name="pOne" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5f-SQ8n8EeOEaMUy0wTQ0A" name="pTwo" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5f-5UMn8EeOEaMUy0wTQ0A" name="board" type="_5dTYwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5f-5Ucn8EeOEaMUy0wTQ0A" name="timerActive">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5f-5VMn8EeOEaMUy0wTQ0A" type="_5diCQMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5f-5Vcn8EeOEaMUy0wTQ0A" name="WordRound" method="_5hCCMMn8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5f_gYsn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5f_gY8n8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5hG6sMn8EeOEaMUy0wTQ0A">
            <body>Constructor for the word round
	 * @param dict the Dictionary file
	 * @param pOne Player one
	 * @param pTwo Player two</body>
          </ownedComment>
          <ownedParameter xmi:id="_5f-5Vsn8EeOEaMUy0wTQ0A" name="dict" type="_5cwmMMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5f-5V8n8EeOEaMUy0wTQ0A" name="pOne" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5f_gYMn8EeOEaMUy0wTQ0A" name="pTwo" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5f_gYcn8EeOEaMUy0wTQ0A" name="board" type="_5dTYwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5f_gZMn8EeOEaMUy0wTQ0A" type="_5diCQMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5f_gZcn8EeOEaMUy0wTQ0A" name="WordRound" method="_5hCCNsn8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5f_gaMn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5f_gacn8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5hG6scn8EeOEaMUy0wTQ0A">
            <body>A constructor for the word round
	 * @param o A gameObjects object.
	 * @param timerActive if the timer is active</body>
          </ownedComment>
          <ownedParameter xmi:id="_5f_gZsn8EeOEaMUy0wTQ0A" name="o" type="_5c2s0Mn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5f_gZ8n8EeOEaMUy0wTQ0A" name="timerActive">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_5gAHcMn8EeOEaMUy0wTQ0A" type="_5diCQMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5gAHccn8EeOEaMUy0wTQ0A" name="WordRound" method="_5hCCOsn8EeOEaMUy0wTQ0A">
          <eAnnotations xmi:id="_5gAHc8n8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_5gAHdMn8EeOEaMUy0wTQ0A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_5hG6ssn8EeOEaMUy0wTQ0A">
            <body>A constructor for the word round
	 * @param o A gameObjects object.</body>
          </ownedComment>
          <ownedParameter xmi:id="_5gAHcsn8EeOEaMUy0wTQ0A" name="o" type="_5c2s0Mn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5gAHdcn8EeOEaMUy0wTQ0A" type="_5diCQMn8EeOEaMUy0wTQ0A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_5gAHdsn8EeOEaMUy0wTQ0A" name="checkAnswer" visibility="private" method="_5hCpQMn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hG6tcn8EeOEaMUy0wTQ0A">
            <body>Checks the players answer
	 * 
	 * @param The Player who's answer is to be checked
	 * @return the length of the word or 0 for an incorrect word</body>
          </ownedComment>
          <ownedParameter xmi:id="_5gAHd8n8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5gAugMn8EeOEaMUy0wTQ0A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5gAugcn8EeOEaMUy0wTQ0A" name="awardPoints" visibility="private" method="_5hCpRsn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hG6t8n8EeOEaMUy0wTQ0A">
            <body>Award the user points based on the length of their answer
	 * 
	 * @param The Player to be awarded points
	 * @param the number of points to be awarded</body>
          </ownedComment>
          <ownedParameter xmi:id="_5gAugsn8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
          <ownedParameter xmi:id="_5gAug8n8EeOEaMUy0wTQ0A" name="points">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_5gAuhMn8EeOEaMUy0wTQ0A" name="getAnswer" visibility="private" method="_5hCpScn8EeOEaMUy0wTQ0A">
          <ownedComment xmi:id="_5hG6uMn8EeOEaMUy0wTQ0A">
            <body>Get the players answer
	 * 
	 * @param Player who's answer is to be collected</body>
          </ownedComment>
          <ownedParameter xmi:id="_5gAuhcn8EeOEaMUy0wTQ0A" name="p" type="_5dJnwMn8EeOEaMUy0wTQ0A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hOPcMn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hOPccn8EeOEaMUy0wTQ0A _5gblQMn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hOPccn8EeOEaMUy0wTQ0A" name="" type="_5cfgcMn8EeOEaMUy0wTQ0A" association="_5hOPcMn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hO2gcn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hO2gsn8EeOEaMUy0wTQ0A _5gczYcn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hO2gsn8EeOEaMUy0wTQ0A" name="" type="_5cfgcMn8EeOEaMUy0wTQ0A" association="_5hO2gcn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hO2hMn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hO2hcn8EeOEaMUy0wTQ0A _5geBgsn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hO2hcn8EeOEaMUy0wTQ0A" name="" type="_5coDUMn8EeOEaMUy0wTQ0A" association="_5hO2hMn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hPdkcn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hPdksn8EeOEaMUy0wTQ0A _5geokcn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hPdksn8EeOEaMUy0wTQ0A" name="" type="_5coDUMn8EeOEaMUy0wTQ0A" association="_5hPdkcn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hQEocn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hQEosn8EeOEaMUy0wTQ0A _5geok8n8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hQEosn8EeOEaMUy0wTQ0A" name="" type="_5coDUMn8EeOEaMUy0wTQ0A" association="_5hQEocn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hQEpMn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hQEpcn8EeOEaMUy0wTQ0A _5gfPoMn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hQEpcn8EeOEaMUy0wTQ0A" name="" type="_5coDUMn8EeOEaMUy0wTQ0A" association="_5hQEpMn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hQrscn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hQrssn8EeOEaMUy0wTQ0A _5gf2ssn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hQrssn8EeOEaMUy0wTQ0A" name="" type="_5coDUMn8EeOEaMUy0wTQ0A" association="_5hQrscn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hQrtMn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hQrtcn8EeOEaMUy0wTQ0A _5giS88n8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hQrtcn8EeOEaMUy0wTQ0A" name="" type="_5cwmMMn8EeOEaMUy0wTQ0A" association="_5hQrtMn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hRSwcn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hRSwsn8EeOEaMUy0wTQ0A _5gi6Acn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hRSwsn8EeOEaMUy0wTQ0A" name="" type="_5cwmMMn8EeOEaMUy0wTQ0A" association="_5hRSwcn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hR50cn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hR50sn8EeOEaMUy0wTQ0A _5gjhEcn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hR50sn8EeOEaMUy0wTQ0A" name="" type="_5cwmMMn8EeOEaMUy0wTQ0A" association="_5hR50cn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hR51Mn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hR51cn8EeOEaMUy0wTQ0A _5gkIIsn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hR51cn8EeOEaMUy0wTQ0A" name="" type="_5cwmMMn8EeOEaMUy0wTQ0A" association="_5hR51Mn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hSg4cn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hSg4sn8EeOEaMUy0wTQ0A _5gkvM8n8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hSg4sn8EeOEaMUy0wTQ0A" name="" type="_5cwmMMn8EeOEaMUy0wTQ0A" association="_5hSg4cn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hSg5Mn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hSg5cn8EeOEaMUy0wTQ0A _5gl9UMn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hSg5cn8EeOEaMUy0wTQ0A" name="" type="_5cwmMMn8EeOEaMUy0wTQ0A" association="_5hSg5Mn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hTH8cn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hTH8sn8EeOEaMUy0wTQ0A _5gmkYcn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hTH8sn8EeOEaMUy0wTQ0A" name="" type="_5c2s0Mn8EeOEaMUy0wTQ0A" association="_5hTH8cn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hTvAcn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hTvAsn8EeOEaMUy0wTQ0A _5gmkY8n8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hTvAsn8EeOEaMUy0wTQ0A" name="" type="_5c2s0Mn8EeOEaMUy0wTQ0A" association="_5hTvAcn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hTvBMn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hTvBcn8EeOEaMUy0wTQ0A _5gnLccn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hTvBcn8EeOEaMUy0wTQ0A" name="" type="_5c2s0Mn8EeOEaMUy0wTQ0A" association="_5hTvBMn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hUWEcn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hUWEsn8EeOEaMUy0wTQ0A _5gnLc8n8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hUWEsn8EeOEaMUy0wTQ0A" name="" type="_5c2s0Mn8EeOEaMUy0wTQ0A" association="_5hUWEcn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hU9IMn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hU9Icn8EeOEaMUy0wTQ0A _5gnygMn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hU9Icn8EeOEaMUy0wTQ0A" name="" type="_5c5wIMn8EeOEaMUy0wTQ0A" association="_5hU9IMn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hU9I8n8EeOEaMUy0wTQ0A" name="" memberEnd="_5hU9JMn8EeOEaMUy0wTQ0A _5gpnsMn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hU9JMn8EeOEaMUy0wTQ0A" name="" type="_5c_PsMn8EeOEaMUy0wTQ0A" association="_5hU9I8n8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hVkMcn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hVkMsn8EeOEaMUy0wTQ0A _5gpnssn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hVkMsn8EeOEaMUy0wTQ0A" name="" type="_5c_PsMn8EeOEaMUy0wTQ0A" association="_5hVkMcn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hVkNMn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hVkNcn8EeOEaMUy0wTQ0A _5gqOwcn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hVkNcn8EeOEaMUy0wTQ0A" name="" type="_5c_PsMn8EeOEaMUy0wTQ0A" association="_5hVkNMn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hWLQcn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hWLQsn8EeOEaMUy0wTQ0A _5gqOw8n8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hWLQsn8EeOEaMUy0wTQ0A" name="" type="_5c_PsMn8EeOEaMUy0wTQ0A" association="_5hWLQcn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hWLRMn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hWLRcn8EeOEaMUy0wTQ0A _5gq10cn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hWLRcn8EeOEaMUy0wTQ0A" name="" type="_5c_PsMn8EeOEaMUy0wTQ0A" association="_5hWLRMn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hWyUcn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hWyUsn8EeOEaMUy0wTQ0A _5gq108n8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hWyUsn8EeOEaMUy0wTQ0A" name="" type="_5c_PsMn8EeOEaMUy0wTQ0A" association="_5hWyUcn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hXZYcn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hXZYsn8EeOEaMUy0wTQ0A _5grc48n8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hXZYsn8EeOEaMUy0wTQ0A" name="" type="_5dC6EMn8EeOEaMUy0wTQ0A" association="_5hXZYcn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hXZZMn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hXZZcn8EeOEaMUy0wTQ0A _5gsD8sn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hXZZcn8EeOEaMUy0wTQ0A" name="" type="_5dFWUMn8EeOEaMUy0wTQ0A" association="_5hXZZMn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hYAccn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hYAcsn8EeOEaMUy0wTQ0A _5gsD88n8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hYAcsn8EeOEaMUy0wTQ0A" name="" type="_5dFWUMn8EeOEaMUy0wTQ0A" association="_5hYAccn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hYAdMn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hYAdcn8EeOEaMUy0wTQ0A _5gsrAMn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hYAdcn8EeOEaMUy0wTQ0A" name="" type="_5dFWUMn8EeOEaMUy0wTQ0A" association="_5hYAdMn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hYngcn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hYngsn8EeOEaMUy0wTQ0A _5gsrBMn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hYngsn8EeOEaMUy0wTQ0A" name="" type="_5dFWUMn8EeOEaMUy0wTQ0A" association="_5hYngcn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hZOkMn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hZOkcn8EeOEaMUy0wTQ0A _5gtSEcn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hZOkcn8EeOEaMUy0wTQ0A" name="" type="_5dFWUMn8EeOEaMUy0wTQ0A" association="_5hZOkMn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hZOk8n8EeOEaMUy0wTQ0A" name="" memberEnd="_5hZOlMn8EeOEaMUy0wTQ0A _5gvuUMn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hZOlMn8EeOEaMUy0wTQ0A" name="" type="_5dLc8Mn8EeOEaMUy0wTQ0A" association="_5hZOk8n8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hZ1ocn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hZ1osn8EeOEaMUy0wTQ0A _5gwVYMn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hZ1osn8EeOEaMUy0wTQ0A" name="" type="_5dTYwMn8EeOEaMUy0wTQ0A" association="_5hZ1ocn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hZ1pMn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hZ1pcn8EeOEaMUy0wTQ0A _5gw8ccn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hZ1pcn8EeOEaMUy0wTQ0A" name="" type="_5dTYwMn8EeOEaMUy0wTQ0A" association="_5hZ1pMn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hacscn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hacssn8EeOEaMUy0wTQ0A _5gxjgcn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hacssn8EeOEaMUy0wTQ0A" name="" type="_5dTYwMn8EeOEaMUy0wTQ0A" association="_5hacscn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hactMn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hactcn8EeOEaMUy0wTQ0A _5gyKkcn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hactcn8EeOEaMUy0wTQ0A" name="" type="_5dTYwMn8EeOEaMUy0wTQ0A" association="_5hactMn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hbDwcn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hbDwsn8EeOEaMUy0wTQ0A _5gyxocn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hbDwsn8EeOEaMUy0wTQ0A" name="" type="_5dTYwMn8EeOEaMUy0wTQ0A" association="_5hbDwcn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_5hbq0cn8EeOEaMUy0wTQ0A" name="" memberEnd="_5hbq0sn8EeOEaMUy0wTQ0A _5g1N4Mn8EeOEaMUy0wTQ0A">
        <ownedEnd xmi:id="_5hbq0sn8EeOEaMUy0wTQ0A" name="" type="_5dfmAMn8EeOEaMUy0wTQ0A" association="_5hbq0cn8EeOEaMUy0wTQ0A"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_5bs2QMn8EeOEaMUy0wTQ0A" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_5bs2Qcn8EeOEaMUy0wTQ0A" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_5b8t4Mn8EeOEaMUy0wTQ0A" name="concurrent">
          <packagedElement xmi:type="uml:Class" xmi:id="_5fwP0Mn8EeOEaMUy0wTQ0A" name="Executors"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_5fw24cn8EeOEaMUy0wTQ0A" name="ScheduledExecutorService"/>
          <packagedElement xmi:type="uml:Enumeration" xmi:id="_5fxd8cn8EeOEaMUy0wTQ0A" name="TimeUnit"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_5faRkMn8EeOEaMUy0wTQ0A" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5fejA8n8EeOEaMUy0wTQ0A" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5fns8Mn8EeOEaMUy0wTQ0A" name="Collections"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5foUAMn8EeOEaMUy0wTQ0A" name="Random"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5fzTIMn8EeOEaMUy0wTQ0A" name="StringTokenizer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5f9EIMn8EeOEaMUy0wTQ0A" name="InputMismatchException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5f9EIsn8EeOEaMUy0wTQ0A" name="Scanner"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_5burcMn8EeOEaMUy0wTQ0A" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_5fd78Mn8EeOEaMUy0wTQ0A" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5fejAcn8EeOEaMUy0wTQ0A" name="FileNotFoundException"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_5gGOEMn8EeOEaMUy0wTQ0A" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_5gGOEcn8EeOEaMUy0wTQ0A" name="Runnable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5gPYAcn8EeOEaMUy0wTQ0A" name="Exception"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5gSbUMn8EeOEaMUy0wTQ0A" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5gXT0Mn8EeOEaMUy0wTQ0A" name="IllegalArgumentException"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_5burccn8EeOEaMUy0wTQ0A" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_5burcsn8EeOEaMUy0wTQ0A" name="xml">
        <packagedElement xmi:type="uml:Package" xmi:id="_5burc8n8EeOEaMUy0wTQ0A" name="parsers">
          <packagedElement xmi:type="uml:Class" xmi:id="_5ffKEcn8EeOEaMUy0wTQ0A" name="DocumentBuilder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_5ffxIcn8EeOEaMUy0wTQ0A" name="DocumentBuilderFactory"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_5bvSgMn8EeOEaMUy0wTQ0A" name="transform">
          <packagedElement xmi:type="uml:Package" xmi:id="_5bvSgcn8EeOEaMUy0wTQ0A" name="dom">
            <packagedElement xmi:type="uml:Class" xmi:id="_5fg_Qcn8EeOEaMUy0wTQ0A" name="DOMSource"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_5bvSgsn8EeOEaMUy0wTQ0A" name="stream">
            <packagedElement xmi:type="uml:Class" xmi:id="_5fhmUcn8EeOEaMUy0wTQ0A" name="StreamResult"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_5ffxI8n8EeOEaMUy0wTQ0A" name="OutputKeys"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_5fgYMcn8EeOEaMUy0wTQ0A" name="Transformer"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_5fgYM8n8EeOEaMUy0wTQ0A" name="TransformerFactory"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_5b31YMn8EeOEaMUy0wTQ0A" name="script">
        <packagedElement xmi:type="uml:Interface" xmi:id="_5fr-YMn8EeOEaMUy0wTQ0A" name="ScriptEngine"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5fslccn8EeOEaMUy0wTQ0A" name="ScriptEngineManager"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5fslc8n8EeOEaMUy0wTQ0A" name="ScriptException"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_5bvSg8n8EeOEaMUy0wTQ0A" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_5bvShMn8EeOEaMUy0wTQ0A" name="w3c">
        <packagedElement xmi:type="uml:Package" xmi:id="_5bvShcn8EeOEaMUy0wTQ0A" name="dom">
          <packagedElement xmi:type="uml:Interface" xmi:id="_5fhmU8n8EeOEaMUy0wTQ0A" name="Document"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_5fiNYcn8EeOEaMUy0wTQ0A" name="Element"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_5fi0ccn8EeOEaMUy0wTQ0A" name="Node"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_5fi0c8n8EeOEaMUy0wTQ0A" name="NodeList"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_5QVTwMn8EeOEaMUy0wTQ0A">
      <eAnnotations xmi:id="_5QVTwcn8EeOEaMUy0wTQ0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_5QVTwsn8EeOEaMUy0wTQ0A" base_Package="_5NxvAMn8EeOEaMUy0wTQ0A">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_5cybYMn8EeOEaMUy0wTQ0A" genericsValue="String" base_Element="_5cx0U8n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Generics xmi:id="_5czCcMn8EeOEaMUy0wTQ0A" genericsValue="String" base_Element="_5cybYcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Generics xmi:id="_5czpgsn8EeOEaMUy0wTQ0A" genericsValue="String" base_Element="_5czpgMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Array xmi:id="_5c7lVMn8EeOEaMUy0wTQ0A" base_Element="_5c7lUMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5dBE4sn8EeOEaMUy0wTQ0A" base_Element="_5dBE4Mn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Array xmi:id="_5dBE5Mn8EeOEaMUy0wTQ0A" base_Element="_5dBE4cn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5dEvRMn8EeOEaMUy0wTQ0A" base_Element="_5dEvQcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5dFWUcn8EeOEaMUy0wTQ0A" base_Element="_5dFWUMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:StyledElement xmi:id="_5dGkccn8EeOEaMUy0wTQ0A" base_Element="_5dGkcMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:StyledElement xmi:id="_5dHLgcn8EeOEaMUy0wTQ0A" base_Element="_5dGkcsn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:StyledElement xmi:id="_5dHLhcn8EeOEaMUy0wTQ0A" base_Element="_5dHLg8n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5dMEAcn8EeOEaMUy0wTQ0A" base_Element="_5dMEAMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5dWcEsn8EeOEaMUy0wTQ0A" base_Element="_5dWcEMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Annotations xmi:id="_5dXDIMn8EeOEaMUy0wTQ0A" base_Element="_5dWcEMn8EeOEaMUy0wTQ0A">
    <annotations xmi:id="_5dXDIcn8EeOEaMUy0wTQ0A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5fa4oMn8EeOEaMUy0wTQ0A" base_Element="_5faRkMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5fejAMn8EeOEaMUy0wTQ0A" base_Element="_5fd78Mn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5fejAsn8EeOEaMUy0wTQ0A" base_Element="_5fejAcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5ffKEMn8EeOEaMUy0wTQ0A" base_Element="_5fejA8n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5ffxIMn8EeOEaMUy0wTQ0A" base_Element="_5ffKEcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5ffxIsn8EeOEaMUy0wTQ0A" base_Element="_5ffxIcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5fgYMMn8EeOEaMUy0wTQ0A" base_Element="_5ffxI8n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5fgYMsn8EeOEaMUy0wTQ0A" base_Element="_5fgYMcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5fg_QMn8EeOEaMUy0wTQ0A" base_Element="_5fgYM8n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5fhmUMn8EeOEaMUy0wTQ0A" base_Element="_5fg_Qcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5fhmUsn8EeOEaMUy0wTQ0A" base_Element="_5fhmUcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5fiNYMn8EeOEaMUy0wTQ0A" base_Element="_5fhmU8n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5fi0cMn8EeOEaMUy0wTQ0A" base_Element="_5fiNYcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5fi0csn8EeOEaMUy0wTQ0A" base_Element="_5fi0ccn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5fjbgMn8EeOEaMUy0wTQ0A" base_Element="_5fi0c8n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5fns8cn8EeOEaMUy0wTQ0A" base_Element="_5fns8Mn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5foUAcn8EeOEaMUy0wTQ0A" base_Element="_5foUAMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5fslcMn8EeOEaMUy0wTQ0A" base_Element="_5fr-YMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5fslcsn8EeOEaMUy0wTQ0A" base_Element="_5fslccn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5ftMgMn8EeOEaMUy0wTQ0A" base_Element="_5fslc8n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Array xmi:id="_5ftzlMn8EeOEaMUy0wTQ0A" base_Element="_5ftzkMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5fw24Mn8EeOEaMUy0wTQ0A" base_Element="_5fwP0Mn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5fxd8Mn8EeOEaMUy0wTQ0A" base_Element="_5fw24cn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5fxd8sn8EeOEaMUy0wTQ0A" base_Element="_5fxd8cn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:StyledElement xmi:id="_5fysFMn8EeOEaMUy0wTQ0A" base_Element="_5fyFAMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5fz6MMn8EeOEaMUy0wTQ0A" base_Element="_5fzTIMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5f4ys8n8EeOEaMUy0wTQ0A" base_Element="_5f4ysMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Annotations xmi:id="_5f5ZwMn8EeOEaMUy0wTQ0A" base_Element="_5f4ysMn8EeOEaMUy0wTQ0A">
    <annotations xmi:id="_5f5Zwcn8EeOEaMUy0wTQ0A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5f9EIcn8EeOEaMUy0wTQ0A" base_Element="_5f9EIMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5f9rMMn8EeOEaMUy0wTQ0A" base_Element="_5f9EIsn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5gG1IMn8EeOEaMUy0wTQ0A" base_Element="_5gGOEcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Generics xmi:id="_5gIDQMn8EeOEaMUy0wTQ0A" genericsValue="String" base_Element="_5gHcMsn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Generics xmi:id="_5gKfgMn8EeOEaMUy0wTQ0A" genericsValue="Integer, Long" base_Element="_5gJ4csn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Generics xmi:id="_5gPYAMn8EeOEaMUy0wTQ0A" genericsValue="Integer" base_Element="_5gOJ4cn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5gP_EMn8EeOEaMUy0wTQ0A" base_Element="_5gPYAcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5gTCYMn8EeOEaMUy0wTQ0A" base_Element="_5gSbUMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Generics xmi:id="_5gTpcMn8EeOEaMUy0wTQ0A" genericsValue="Score" base_Element="_5gTCYcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Generics xmi:id="_5gU3kMn8EeOEaMUy0wTQ0A" genericsValue="Score" base_Element="_5gUQg8n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Generics xmi:id="_5gWFsMn8EeOEaMUy0wTQ0A" genericsValue="Score" base_Element="_5gVeo8n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Generics xmi:id="_5gWswMn8EeOEaMUy0wTQ0A" genericsValue="Score" base_Element="_5gWFssn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5gXT0cn8EeOEaMUy0wTQ0A" base_Element="_5gXT0Mn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Generics xmi:id="_5gX64sn8EeOEaMUy0wTQ0A" genericsValue="Score" base_Element="_5gX64Mn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gcMUMn8EeOEaMUy0wTQ0A" base_Element="_5gblQMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gczYMn8EeOEaMUy0wTQ0A" base_Element="_5gcMUcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gczYsn8EeOEaMUy0wTQ0A" base_Element="_5gczYcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gdaccn8EeOEaMUy0wTQ0A" base_Element="_5gdacMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gdac8n8EeOEaMUy0wTQ0A" base_Element="_5gdacsn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5geBgcn8EeOEaMUy0wTQ0A" base_Element="_5geBgMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5geokMn8EeOEaMUy0wTQ0A" base_Element="_5geBgsn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5geoksn8EeOEaMUy0wTQ0A" base_Element="_5geokcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5geolMn8EeOEaMUy0wTQ0A" base_Element="_5geok8n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gfPocn8EeOEaMUy0wTQ0A" base_Element="_5gfPoMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Array xmi:id="_5gfPpMn8EeOEaMUy0wTQ0A" base_Element="_5gfPosn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gfPpcn8EeOEaMUy0wTQ0A" base_Element="_5gfPosn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gf2scn8EeOEaMUy0wTQ0A" base_Element="_5gf2sMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gf2s8n8EeOEaMUy0wTQ0A" base_Element="_5gf2ssn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5ggdwMn8EeOEaMUy0wTQ0A" base_Element="_5gf2tMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5ggdw8n8EeOEaMUy0wTQ0A" base_Element="_5ggdwcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5ghE0cn8EeOEaMUy0wTQ0A" base_Element="_5ggdxMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5ghE1Mn8EeOEaMUy0wTQ0A" base_Element="_5ghE0sn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5ghr4sn8EeOEaMUy0wTQ0A" base_Element="_5ghr4Mn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5ghr5Mn8EeOEaMUy0wTQ0A" base_Element="_5ghr48n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5giS8sn8EeOEaMUy0wTQ0A" base_Element="_5giS8Mn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gi6AMn8EeOEaMUy0wTQ0A" base_Element="_5giS88n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Generics xmi:id="_5gi6Asn8EeOEaMUy0wTQ0A" genericsValue="String" base_Element="_5gi6Acn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gjhEMn8EeOEaMUy0wTQ0A" base_Element="_5gi6Acn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gjhEsn8EeOEaMUy0wTQ0A" base_Element="_5gjhEcn8EeOEaMUy0wTQ0A">
    <associatedElement xmi:type="uml:Operation" xmi:id="_5gkIIcn8EeOEaMUy0wTQ0A" name="getNineLetterWords" visibility="private" method="_5g6GYcn8EeOEaMUy0wTQ0A"/>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_5gkIIMn8EeOEaMUy0wTQ0A" genericsValue="String" base_Element="_5gjhEcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Generics xmi:id="_5gkvMMn8EeOEaMUy0wTQ0A" genericsValue="ArrayList&lt;Character>" base_Element="_5gkIIsn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gkvMsn8EeOEaMUy0wTQ0A" base_Element="_5gkIIsn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5glWQMn8EeOEaMUy0wTQ0A" base_Element="_5gkvM8n8EeOEaMUy0wTQ0A">
    <associatedElement xmi:type="uml:Operation" xmi:id="_5glWQsn8EeOEaMUy0wTQ0A" name="getEightLetterWords" visibility="private" method="_5g6GYsn8EeOEaMUy0wTQ0A"/>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_5glWQcn8EeOEaMUy0wTQ0A" genericsValue="String" base_Element="_5gkvM8n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Generics xmi:id="_5gl9Ucn8EeOEaMUy0wTQ0A" genericsValue="ArrayList&lt;Character>" base_Element="_5gl9UMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gmkYMn8EeOEaMUy0wTQ0A" base_Element="_5gl9UMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gmkYsn8EeOEaMUy0wTQ0A" base_Element="_5gmkYcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gnLcMn8EeOEaMUy0wTQ0A" base_Element="_5gmkY8n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gnLcsn8EeOEaMUy0wTQ0A" base_Element="_5gnLccn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gnLdMn8EeOEaMUy0wTQ0A" base_Element="_5gnLc8n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Generics xmi:id="_5gnygcn8EeOEaMUy0wTQ0A" genericsValue="String" base_Element="_5gnygMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gnygsn8EeOEaMUy0wTQ0A" base_Element="_5gnygMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Array xmi:id="_5goZksn8EeOEaMUy0wTQ0A" base_Element="_5goZkMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5goZk8n8EeOEaMUy0wTQ0A" base_Element="_5goZkMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gpAoMn8EeOEaMUy0wTQ0A" base_Element="_5goZlMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gpAosn8EeOEaMUy0wTQ0A" base_Element="_5gpAocn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gpApMn8EeOEaMUy0wTQ0A" base_Element="_5gpAo8n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gpnscn8EeOEaMUy0wTQ0A" base_Element="_5gpnsMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gqOwMn8EeOEaMUy0wTQ0A" base_Element="_5gpnssn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gqOwsn8EeOEaMUy0wTQ0A" base_Element="_5gqOwcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gq10Mn8EeOEaMUy0wTQ0A" base_Element="_5gqOw8n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gq10sn8EeOEaMUy0wTQ0A" base_Element="_5gq10cn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gq11Mn8EeOEaMUy0wTQ0A" base_Element="_5gq108n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5grc4sn8EeOEaMUy0wTQ0A" base_Element="_5grc4Mn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5grc5Mn8EeOEaMUy0wTQ0A" base_Element="_5grc48n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gsD8cn8EeOEaMUy0wTQ0A" base_Element="_5gsD8Mn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gt5I8n8EeOEaMUy0wTQ0A" base_Element="_5gt5Isn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gugMcn8EeOEaMUy0wTQ0A" base_Element="_5gugMMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gugM8n8EeOEaMUy0wTQ0A" base_Element="_5gugMsn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gvHQMn8EeOEaMUy0wTQ0A" base_Element="_5gugNMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gvHQsn8EeOEaMUy0wTQ0A" base_Element="_5gvHQcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gvHRMn8EeOEaMUy0wTQ0A" base_Element="_5gvHQ8n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Generics xmi:id="_5gvuUcn8EeOEaMUy0wTQ0A" genericsValue="Integer" base_Element="_5gvuUMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gvuUsn8EeOEaMUy0wTQ0A" base_Element="_5gvuUMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Generics xmi:id="_5gwVYcn8EeOEaMUy0wTQ0A" genericsValue="Score" base_Element="_5gwVYMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gw8cMn8EeOEaMUy0wTQ0A" base_Element="_5gwVYMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Generics xmi:id="_5gw8csn8EeOEaMUy0wTQ0A" genericsValue="Score" base_Element="_5gw8ccn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gxjgMn8EeOEaMUy0wTQ0A" base_Element="_5gw8ccn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Generics xmi:id="_5gxjgsn8EeOEaMUy0wTQ0A" genericsValue="Score" base_Element="_5gxjgcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gyKkMn8EeOEaMUy0wTQ0A" base_Element="_5gxjgcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Generics xmi:id="_5gyKksn8EeOEaMUy0wTQ0A" genericsValue="Score" base_Element="_5gyKkcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gyxoMn8EeOEaMUy0wTQ0A" base_Element="_5gyKkcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Generics xmi:id="_5gyxosn8EeOEaMUy0wTQ0A" genericsValue="Score" base_Element="_5gyxocn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gyxo8n8EeOEaMUy0wTQ0A" base_Element="_5gyxocn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5gz_xMn8EeOEaMUy0wTQ0A" base_Element="_5gz_w8n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5g0m0Mn8EeOEaMUy0wTQ0A" base_Element="_5gz_xcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5g0m0sn8EeOEaMUy0wTQ0A" base_Element="_5g0m0cn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5g1N4cn8EeOEaMUy0wTQ0A" base_Element="_5g1N4Mn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5g108Mn8EeOEaMUy0wTQ0A" base_Element="_5g1N4sn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5g108sn8EeOEaMUy0wTQ0A" base_Element="_5g108cn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5g109Mn8EeOEaMUy0wTQ0A" base_Element="_5g1088n8EeOEaMUy0wTQ0A"/>
  <uml:OpaqueBehavior xmi:id="_5g6GYcn8EeOEaMUy0wTQ0A" name="getNineLetterWords" specification="_5gkIIcn8EeOEaMUy0wTQ0A">
    <language>java</language>
    <body>nineLetterWords = new ArrayList&lt;String>();
		
		for(String word: words){
			
			if (word.length() == 9){
				
				//Add to list of nine letter words
				nineLetterWords.add(word);
				
				//break into chars and add to list
				ArrayList&lt;Character> charList = new ArrayList&lt;Character>();

				for (char ch : word.toCharArray()) {
				  charList.add(ch);
				}
				Collections.sort(charList);
				nineLetterWordsChars.add(charList);
			}
		}
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_5g6GYsn8EeOEaMUy0wTQ0A" name="getEightLetterWords" specification="_5glWQsn8EeOEaMUy0wTQ0A">
    <language>java</language>
    <body>eightLetterWords = new ArrayList&lt;String>();
		
		for(String word: words){
			
			if (word.length() == 8){
				
				//Add to list of nine letter words
				eightLetterWords.add(word);
				
				//break into chars and add to list
				ArrayList&lt;Character> charList = new ArrayList&lt;Character>();

				for (char ch : word.toCharArray()) {
				  charList.add(ch);
				}
				Collections.sort(charList);
				eightLetterWordsChars.add(charList);
			}
		}
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_5hO2gMn8EeOEaMUy0wTQ0A" base_Element="_5hOPcMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hO2g8n8EeOEaMUy0wTQ0A" base_Element="_5hO2gcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hPdkMn8EeOEaMUy0wTQ0A" base_Element="_5hO2hMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hQEoMn8EeOEaMUy0wTQ0A" base_Element="_5hPdkcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hQEo8n8EeOEaMUy0wTQ0A" base_Element="_5hQEocn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hQrsMn8EeOEaMUy0wTQ0A" base_Element="_5hQEpMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hQrs8n8EeOEaMUy0wTQ0A" base_Element="_5hQrscn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hRSwMn8EeOEaMUy0wTQ0A" base_Element="_5hQrtMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hR50Mn8EeOEaMUy0wTQ0A" base_Element="_5hRSwcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hR508n8EeOEaMUy0wTQ0A" base_Element="_5hR50cn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hSg4Mn8EeOEaMUy0wTQ0A" base_Element="_5hR51Mn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hSg48n8EeOEaMUy0wTQ0A" base_Element="_5hSg4cn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hTH8Mn8EeOEaMUy0wTQ0A" base_Element="_5hSg5Mn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hTvAMn8EeOEaMUy0wTQ0A" base_Element="_5hTH8cn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hTvA8n8EeOEaMUy0wTQ0A" base_Element="_5hTvAcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hUWEMn8EeOEaMUy0wTQ0A" base_Element="_5hTvBMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hUWE8n8EeOEaMUy0wTQ0A" base_Element="_5hUWEcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hU9Isn8EeOEaMUy0wTQ0A" base_Element="_5hU9IMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hVkMMn8EeOEaMUy0wTQ0A" base_Element="_5hU9I8n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hVkM8n8EeOEaMUy0wTQ0A" base_Element="_5hVkMcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hWLQMn8EeOEaMUy0wTQ0A" base_Element="_5hVkNMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hWLQ8n8EeOEaMUy0wTQ0A" base_Element="_5hWLQcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hWyUMn8EeOEaMUy0wTQ0A" base_Element="_5hWLRMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hXZYMn8EeOEaMUy0wTQ0A" base_Element="_5hWyUcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hXZY8n8EeOEaMUy0wTQ0A" base_Element="_5hXZYcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hYAcMn8EeOEaMUy0wTQ0A" base_Element="_5hXZZMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hYAc8n8EeOEaMUy0wTQ0A" base_Element="_5hYAccn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hYngMn8EeOEaMUy0wTQ0A" base_Element="_5hYAdMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hYng8n8EeOEaMUy0wTQ0A" base_Element="_5hYngcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hZOksn8EeOEaMUy0wTQ0A" base_Element="_5hZOkMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hZ1oMn8EeOEaMUy0wTQ0A" base_Element="_5hZOk8n8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hZ1o8n8EeOEaMUy0wTQ0A" base_Element="_5hZ1ocn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hacsMn8EeOEaMUy0wTQ0A" base_Element="_5hZ1pMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hacs8n8EeOEaMUy0wTQ0A" base_Element="_5hacscn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hbDwMn8EeOEaMUy0wTQ0A" base_Element="_5hactMn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hbq0Mn8EeOEaMUy0wTQ0A" base_Element="_5hbDwcn8EeOEaMUy0wTQ0A"/>
  <UMLLabProfile:Reference xmi:id="_5hbq08n8EeOEaMUy0wTQ0A" base_Element="_5hbq0cn8EeOEaMUy0wTQ0A"/>
</xmi:XMI>
